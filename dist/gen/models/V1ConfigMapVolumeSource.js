"use strict";
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.V1ConfigMapVolumeSource = void 0;
/**
* ConfigMapVolumeSource adapts a ConfigMap into a volume. More info: https://kubernetes.io/docs/concepts/storage/volumes/#configmap
*/
class V1ConfigMapVolumeSource {
    /**
    * Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    */
    'name';
    /**
    * Specify whether the ConfigMap or it\'s keys must be defined
    */
    'optional';
    /**
    * The volume label of the resulting disk inside the VMI. Different bootstrapping mechanisms require different values. Typical values are \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart).
    */
    'volumeLabel';
    static discriminator = undefined;
    static mapping = undefined;
    static attributeTypeMap = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "optional",
            "baseName": "optional",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "volumeLabel",
            "baseName": "volumeLabel",
            "type": "string",
            "format": ""
        }
    ];
    static getAttributeTypeMap() {
        return V1ConfigMapVolumeSource.attributeTypeMap;
    }
    constructor() {
    }
}
exports.V1ConfigMapVolumeSource = V1ConfigMapVolumeSource;
//# sourceMappingURL=V1ConfigMapVolumeSource.js.map