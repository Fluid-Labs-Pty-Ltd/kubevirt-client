/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1DiskVerification } from '../models/V1DiskVerification.js';
import { V1LogVerbosity } from '../models/V1LogVerbosity.js';
/**
* DeveloperConfiguration holds developer options
*/
export declare class V1DeveloperConfiguration {
    /**
    * For each requested virtual CPU, CPUAllocationRatio defines how much physical CPU to request per VMI from the hosting node. The value is in fraction of a CPU thread (or core on non-hyperthreaded nodes). For example, a value of 1 means 1 physical CPU thread per VMI CPU thread. A value of 100 would be 1% of a physical thread allocated for each requested VMI thread. This option has no effect on VMIs that request dedicated CPUs. More information at: https://kubevirt.io/user-guide/operations/node_overcommit/#node-cpu-allocation-ratio Defaults to 10
    */
    'cpuAllocationRatio'?: number;
    'diskVerification'?: V1DiskVerification;
    /**
    * FeatureGates is the list of experimental features to enable. Defaults to none
    */
    'featureGates'?: Array<string>;
    'logVerbosity'?: V1LogVerbosity;
    /**
    * MemoryOvercommit is the percentage of memory we want to give VMIs compared to the amount given to its parent pod (virt-launcher). For example, a value of 102 means the VMI will \"see\" 2% more memory than its parent pod. Values under 100 are effectively \"undercommits\". Overcommits can lead to memory exhaustion, which in turn can lead to crashes. Use carefully. Defaults to 100
    */
    'memoryOvercommit'?: number;
    /**
    * Allow overriding the automatically determined minimum TSC frequency of the cluster and fixate the minimum to this frequency.
    */
    'minimumClusterTSCFrequency'?: number;
    /**
    * MinimumReservePVCBytes is the amount of space, in bytes, to leave unused on disks. Defaults to 131072 (128KiB)
    */
    'minimumReservePVCBytes'?: number;
    /**
    * NodeSelectors allows restricting VMI creation to nodes that match a set of labels. Defaults to none
    */
    'nodeSelectors'?: {
        [key: string]: string;
    };
    /**
    * LessPVCSpaceToleration determines how much smaller, in percentage, disk PVCs are allowed to be compared to the requested size (to account for various overheads). Defaults to 10
    */
    'pvcTolerateLessSpaceUpToPercent'?: number;
    /**
    * UseEmulation can be set to true to allow fallback to software emulation in case hardware-assisted emulation is not available. Defaults to false
    */
    'useEmulation'?: boolean;
    static readonly discriminator: string | undefined;
    static readonly mapping: {
        [index: string]: string;
    } | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
//# sourceMappingURL=V1DeveloperConfiguration.d.ts.map