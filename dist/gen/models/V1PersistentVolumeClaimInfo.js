"use strict";
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.V1PersistentVolumeClaimInfoVolumeModeEnum = exports.V1PersistentVolumeClaimInfoAccessModesEnum = exports.V1PersistentVolumeClaimInfo = void 0;
/**
* PersistentVolumeClaimInfo contains the relavant information virt-handler needs cached about a PVC
*/
class V1PersistentVolumeClaimInfo {
    /**
    * AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
    */
    'accessModes';
    /**
    * Capacity represents the capacity set on the corresponding PVC status
    */
    'capacity';
    /**
    * ClaimName is the name of the PVC
    */
    'claimName';
    /**
    * Percentage of filesystem\'s size to be reserved when resizing the PVC
    */
    'filesystemOverhead';
    /**
    * Preallocated indicates if the PVC\'s storage is preallocated or not
    */
    'preallocated';
    /**
    * Requests represents the resources requested by the corresponding PVC spec
    */
    'requests';
    /**
    * VolumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.  Possible enum values:  - `\"Block\"` means the volume will not be formatted with a filesystem and will remain a raw block device.  - `\"Filesystem\"` means the volume will be or is formatted with a filesystem.
    */
    'volumeMode';
    static discriminator = undefined;
    static mapping = undefined;
    static attributeTypeMap = [
        {
            "name": "accessModes",
            "baseName": "accessModes",
            "type": "Array<V1PersistentVolumeClaimInfoAccessModesEnum>",
            "format": ""
        },
        {
            "name": "capacity",
            "baseName": "capacity",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "claimName",
            "baseName": "claimName",
            "type": "string",
            "format": ""
        },
        {
            "name": "filesystemOverhead",
            "baseName": "filesystemOverhead",
            "type": "string",
            "format": ""
        },
        {
            "name": "preallocated",
            "baseName": "preallocated",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "requests",
            "baseName": "requests",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "volumeMode",
            "baseName": "volumeMode",
            "type": "V1PersistentVolumeClaimInfoVolumeModeEnum",
            "format": ""
        }
    ];
    static getAttributeTypeMap() {
        return V1PersistentVolumeClaimInfo.attributeTypeMap;
    }
    constructor() {
    }
}
exports.V1PersistentVolumeClaimInfo = V1PersistentVolumeClaimInfo;
var V1PersistentVolumeClaimInfoAccessModesEnum;
(function (V1PersistentVolumeClaimInfoAccessModesEnum) {
    V1PersistentVolumeClaimInfoAccessModesEnum["ReadOnlyMany"] = "ReadOnlyMany";
    V1PersistentVolumeClaimInfoAccessModesEnum["ReadWriteMany"] = "ReadWriteMany";
    V1PersistentVolumeClaimInfoAccessModesEnum["ReadWriteOnce"] = "ReadWriteOnce";
    V1PersistentVolumeClaimInfoAccessModesEnum["ReadWriteOncePod"] = "ReadWriteOncePod";
})(V1PersistentVolumeClaimInfoAccessModesEnum || (exports.V1PersistentVolumeClaimInfoAccessModesEnum = V1PersistentVolumeClaimInfoAccessModesEnum = {}));
var V1PersistentVolumeClaimInfoVolumeModeEnum;
(function (V1PersistentVolumeClaimInfoVolumeModeEnum) {
    V1PersistentVolumeClaimInfoVolumeModeEnum["Block"] = "Block";
    V1PersistentVolumeClaimInfoVolumeModeEnum["Filesystem"] = "Filesystem";
})(V1PersistentVolumeClaimInfoVolumeModeEnum || (exports.V1PersistentVolumeClaimInfoVolumeModeEnum = V1PersistentVolumeClaimInfoVolumeModeEnum = {}));
//# sourceMappingURL=V1PersistentVolumeClaimInfo.js.map