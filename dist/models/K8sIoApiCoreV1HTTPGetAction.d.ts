/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { K8sIoApiCoreV1HTTPHeader } from './K8sIoApiCoreV1HTTPHeader.js';
/**
 * HTTPGetAction describes an action based on HTTP Get requests.
 * @export
 * @interface K8sIoApiCoreV1HTTPGetAction
 */
export interface K8sIoApiCoreV1HTTPGetAction {
    /**
     * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
     * @type {string}
     * @memberof K8sIoApiCoreV1HTTPGetAction
     */
    host?: string;
    /**
     * Custom headers to set in the request. HTTP allows repeated headers.
     * @type {Array<K8sIoApiCoreV1HTTPHeader>}
     * @memberof K8sIoApiCoreV1HTTPGetAction
     */
    httpHeaders?: Array<K8sIoApiCoreV1HTTPHeader>;
    /**
     * Path to access on the HTTP server.
     * @type {string}
     * @memberof K8sIoApiCoreV1HTTPGetAction
     */
    path?: string;
    /**
     * Scheme to use for connecting to the host. Defaults to HTTP.
     *
     * Possible enum values:
     *  - `"HTTP"` means that the scheme used will be http://
     *  - `"HTTPS"` means that the scheme used will be https://
     * @type {string}
     * @memberof K8sIoApiCoreV1HTTPGetAction
     */
    scheme?: K8sIoApiCoreV1HTTPGetActionSchemeEnum;
}
/**
 * @export
 */
export declare const K8sIoApiCoreV1HTTPGetActionSchemeEnum: {
    readonly Http: "HTTP";
    readonly Https: "HTTPS";
};
export type K8sIoApiCoreV1HTTPGetActionSchemeEnum = typeof K8sIoApiCoreV1HTTPGetActionSchemeEnum[keyof typeof K8sIoApiCoreV1HTTPGetActionSchemeEnum];
/**
 * Check if a given object implements the K8sIoApiCoreV1HTTPGetAction interface.
 */
export declare function instanceOfK8sIoApiCoreV1HTTPGetAction(value: object): value is K8sIoApiCoreV1HTTPGetAction;
export declare function K8sIoApiCoreV1HTTPGetActionFromJSON(json: any): K8sIoApiCoreV1HTTPGetAction;
export declare function K8sIoApiCoreV1HTTPGetActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): K8sIoApiCoreV1HTTPGetAction;
export declare function K8sIoApiCoreV1HTTPGetActionToJSON(json: any): K8sIoApiCoreV1HTTPGetAction;
export declare function K8sIoApiCoreV1HTTPGetActionToJSONTyped(value?: K8sIoApiCoreV1HTTPGetAction | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=K8sIoApiCoreV1HTTPGetAction.d.ts.map