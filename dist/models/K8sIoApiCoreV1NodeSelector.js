/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { K8sIoApiCoreV1NodeSelectorTermFromJSON, K8sIoApiCoreV1NodeSelectorTermToJSON, } from './K8sIoApiCoreV1NodeSelectorTerm.js';
/**
 * Check if a given object implements the K8sIoApiCoreV1NodeSelector interface.
 */
export function instanceOfK8sIoApiCoreV1NodeSelector(value) {
    if (!('nodeSelectorTerms' in value) || value['nodeSelectorTerms'] === undefined)
        return false;
    return true;
}
export function K8sIoApiCoreV1NodeSelectorFromJSON(json) {
    return K8sIoApiCoreV1NodeSelectorFromJSONTyped(json, false);
}
export function K8sIoApiCoreV1NodeSelectorFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'nodeSelectorTerms': (json['nodeSelectorTerms'].map(K8sIoApiCoreV1NodeSelectorTermFromJSON)),
    };
}
export function K8sIoApiCoreV1NodeSelectorToJSON(json) {
    return K8sIoApiCoreV1NodeSelectorToJSONTyped(json, false);
}
export function K8sIoApiCoreV1NodeSelectorToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'nodeSelectorTerms': (value['nodeSelectorTerms'].map(K8sIoApiCoreV1NodeSelectorTermToJSON)),
    };
}
//# sourceMappingURL=K8sIoApiCoreV1NodeSelector.js.map