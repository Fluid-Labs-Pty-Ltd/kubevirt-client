/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { K8sIoApiCoreV1NodeSelectorRequirement } from './K8sIoApiCoreV1NodeSelectorRequirement.js';
/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 * @export
 * @interface K8sIoApiCoreV1NodeSelectorTerm
 */
export interface K8sIoApiCoreV1NodeSelectorTerm {
    /**
     * A list of node selector requirements by node's labels.
     * @type {Array<K8sIoApiCoreV1NodeSelectorRequirement>}
     * @memberof K8sIoApiCoreV1NodeSelectorTerm
     */
    matchExpressions?: Array<K8sIoApiCoreV1NodeSelectorRequirement>;
    /**
     * A list of node selector requirements by node's fields.
     * @type {Array<K8sIoApiCoreV1NodeSelectorRequirement>}
     * @memberof K8sIoApiCoreV1NodeSelectorTerm
     */
    matchFields?: Array<K8sIoApiCoreV1NodeSelectorRequirement>;
}
/**
 * Check if a given object implements the K8sIoApiCoreV1NodeSelectorTerm interface.
 */
export declare function instanceOfK8sIoApiCoreV1NodeSelectorTerm(value: object): value is K8sIoApiCoreV1NodeSelectorTerm;
export declare function K8sIoApiCoreV1NodeSelectorTermFromJSON(json: any): K8sIoApiCoreV1NodeSelectorTerm;
export declare function K8sIoApiCoreV1NodeSelectorTermFromJSONTyped(json: any, ignoreDiscriminator: boolean): K8sIoApiCoreV1NodeSelectorTerm;
export declare function K8sIoApiCoreV1NodeSelectorTermToJSON(json: any): K8sIoApiCoreV1NodeSelectorTerm;
export declare function K8sIoApiCoreV1NodeSelectorTermToJSONTyped(value?: K8sIoApiCoreV1NodeSelectorTerm | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=K8sIoApiCoreV1NodeSelectorTerm.d.ts.map