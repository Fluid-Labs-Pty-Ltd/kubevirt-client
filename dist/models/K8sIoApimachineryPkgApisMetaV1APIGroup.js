/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { K8sIoApimachineryPkgApisMetaV1GroupVersionForDiscoveryFromJSON, K8sIoApimachineryPkgApisMetaV1GroupVersionForDiscoveryToJSON, } from './K8sIoApimachineryPkgApisMetaV1GroupVersionForDiscovery.js';
import { K8sIoApimachineryPkgApisMetaV1ServerAddressByClientCIDRFromJSON, K8sIoApimachineryPkgApisMetaV1ServerAddressByClientCIDRToJSON, } from './K8sIoApimachineryPkgApisMetaV1ServerAddressByClientCIDR.js';
/**
 * Check if a given object implements the K8sIoApimachineryPkgApisMetaV1APIGroup interface.
 */
export function instanceOfK8sIoApimachineryPkgApisMetaV1APIGroup(value) {
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('versions' in value) || value['versions'] === undefined)
        return false;
    return true;
}
export function K8sIoApimachineryPkgApisMetaV1APIGroupFromJSON(json) {
    return K8sIoApimachineryPkgApisMetaV1APIGroupFromJSONTyped(json, false);
}
export function K8sIoApimachineryPkgApisMetaV1APIGroupFromJSONTyped(json, _ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'apiVersion': json['apiVersion'] == null ? undefined : json['apiVersion'],
        'kind': json['kind'] == null ? undefined : json['kind'],
        'name': json['name'],
        'preferredVersion': json['preferredVersion'] == null ? undefined : K8sIoApimachineryPkgApisMetaV1GroupVersionForDiscoveryFromJSON(json['preferredVersion']),
        'serverAddressByClientCIDRs': json['serverAddressByClientCIDRs'] == null ? undefined : (json['serverAddressByClientCIDRs'].map(K8sIoApimachineryPkgApisMetaV1ServerAddressByClientCIDRFromJSON)),
        'versions': (json['versions'].map(K8sIoApimachineryPkgApisMetaV1GroupVersionForDiscoveryFromJSON)),
    };
}
export function K8sIoApimachineryPkgApisMetaV1APIGroupToJSON(json) {
    return K8sIoApimachineryPkgApisMetaV1APIGroupToJSONTyped(json, false);
}
export function K8sIoApimachineryPkgApisMetaV1APIGroupToJSONTyped(value, _ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'apiVersion': value['apiVersion'],
        'kind': value['kind'],
        'name': value['name'],
        'preferredVersion': K8sIoApimachineryPkgApisMetaV1GroupVersionForDiscoveryToJSON(value['preferredVersion']),
        'serverAddressByClientCIDRs': value['serverAddressByClientCIDRs'] == null ? undefined : (value['serverAddressByClientCIDRs'].map(K8sIoApimachineryPkgApisMetaV1ServerAddressByClientCIDRToJSON)),
        'versions': (value['versions'].map(K8sIoApimachineryPkgApisMetaV1GroupVersionForDiscoveryToJSON)),
    };
}
//# sourceMappingURL=K8sIoApimachineryPkgApisMetaV1APIGroup.js.map