/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1CPUFeatureFromJSON, V1CPUFeatureToJSON, } from './V1CPUFeature.js';
import { V1NUMAFromJSON, V1NUMAToJSON, } from './V1NUMA.js';
import { V1RealtimeFromJSON, V1RealtimeToJSON, } from './V1Realtime.js';
/**
 * Check if a given object implements the V1CPU interface.
 */
export function instanceOfV1CPU(value) {
    return true;
}
export function V1CPUFromJSON(json) {
    return V1CPUFromJSONTyped(json, false);
}
export function V1CPUFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'cores': json['cores'] == null ? undefined : json['cores'],
        'dedicatedCpuPlacement': json['dedicatedCpuPlacement'] == null ? undefined : json['dedicatedCpuPlacement'],
        'features': json['features'] == null ? undefined : (json['features'].map(V1CPUFeatureFromJSON)),
        'isolateEmulatorThread': json['isolateEmulatorThread'] == null ? undefined : json['isolateEmulatorThread'],
        'maxSockets': json['maxSockets'] == null ? undefined : json['maxSockets'],
        'model': json['model'] == null ? undefined : json['model'],
        'numa': json['numa'] == null ? undefined : V1NUMAFromJSON(json['numa']),
        'realtime': json['realtime'] == null ? undefined : V1RealtimeFromJSON(json['realtime']),
        'sockets': json['sockets'] == null ? undefined : json['sockets'],
        'threads': json['threads'] == null ? undefined : json['threads'],
    };
}
export function V1CPUToJSON(json) {
    return V1CPUToJSONTyped(json, false);
}
export function V1CPUToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'cores': value['cores'],
        'dedicatedCpuPlacement': value['dedicatedCpuPlacement'],
        'features': value['features'] == null ? undefined : (value['features'].map(V1CPUFeatureToJSON)),
        'isolateEmulatorThread': value['isolateEmulatorThread'],
        'maxSockets': value['maxSockets'],
        'model': value['model'],
        'numa': V1NUMAToJSON(value['numa']),
        'realtime': V1RealtimeToJSON(value['realtime']),
        'sockets': value['sockets'],
        'threads': value['threads'],
    };
}
//# sourceMappingURL=V1CPU.js.map