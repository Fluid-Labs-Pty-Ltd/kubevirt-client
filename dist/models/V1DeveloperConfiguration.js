/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1LogVerbosityFromJSON, V1LogVerbosityToJSON, } from './V1LogVerbosity.js';
import { V1DiskVerificationFromJSON, V1DiskVerificationToJSON, } from './V1DiskVerification.js';
/**
 * Check if a given object implements the V1DeveloperConfiguration interface.
 */
export function instanceOfV1DeveloperConfiguration(value) {
    return true;
}
export function V1DeveloperConfigurationFromJSON(json) {
    return V1DeveloperConfigurationFromJSONTyped(json, false);
}
export function V1DeveloperConfigurationFromJSONTyped(json, _ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'cpuAllocationRatio': json['cpuAllocationRatio'] == null ? undefined : json['cpuAllocationRatio'],
        'diskVerification': json['diskVerification'] == null ? undefined : V1DiskVerificationFromJSON(json['diskVerification']),
        'featureGates': json['featureGates'] == null ? undefined : json['featureGates'],
        'logVerbosity': json['logVerbosity'] == null ? undefined : V1LogVerbosityFromJSON(json['logVerbosity']),
        'memoryOvercommit': json['memoryOvercommit'] == null ? undefined : json['memoryOvercommit'],
        'minimumClusterTSCFrequency': json['minimumClusterTSCFrequency'] == null ? undefined : json['minimumClusterTSCFrequency'],
        'minimumReservePVCBytes': json['minimumReservePVCBytes'] == null ? undefined : json['minimumReservePVCBytes'],
        'nodeSelectors': json['nodeSelectors'] == null ? undefined : json['nodeSelectors'],
        'pvcTolerateLessSpaceUpToPercent': json['pvcTolerateLessSpaceUpToPercent'] == null ? undefined : json['pvcTolerateLessSpaceUpToPercent'],
        'useEmulation': json['useEmulation'] == null ? undefined : json['useEmulation'],
    };
}
export function V1DeveloperConfigurationToJSON(json) {
    return V1DeveloperConfigurationToJSONTyped(json, false);
}
export function V1DeveloperConfigurationToJSONTyped(value, _ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'cpuAllocationRatio': value['cpuAllocationRatio'],
        'diskVerification': V1DiskVerificationToJSON(value['diskVerification']),
        'featureGates': value['featureGates'],
        'logVerbosity': V1LogVerbosityToJSON(value['logVerbosity']),
        'memoryOvercommit': value['memoryOvercommit'],
        'minimumClusterTSCFrequency': value['minimumClusterTSCFrequency'],
        'minimumReservePVCBytes': value['minimumReservePVCBytes'],
        'nodeSelectors': value['nodeSelectors'],
        'pvcTolerateLessSpaceUpToPercent': value['pvcTolerateLessSpaceUpToPercent'],
        'useEmulation': value['useEmulation'],
    };
}
//# sourceMappingURL=V1DeveloperConfiguration.js.map