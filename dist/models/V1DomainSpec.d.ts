/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { V1Memory } from './V1Memory.js';
import type { V1Firmware } from './V1Firmware.js';
import type { V1Features } from './V1Features.js';
import type { V1Chassis } from './V1Chassis.js';
import type { V1Devices } from './V1Devices.js';
import type { V1Clock } from './V1Clock.js';
import type { V1Machine } from './V1Machine.js';
import type { V1LaunchSecurity } from './V1LaunchSecurity.js';
import type { V1CPU } from './V1CPU.js';
import type { V1ResourceRequirements } from './V1ResourceRequirements.js';
/**
 *
 * @export
 * @interface V1DomainSpec
 */
export interface V1DomainSpec {
    /**
     *
     * @type {V1Chassis}
     * @memberof V1DomainSpec
     */
    chassis?: V1Chassis;
    /**
     *
     * @type {V1Clock}
     * @memberof V1DomainSpec
     */
    clock?: V1Clock;
    /**
     *
     * @type {V1CPU}
     * @memberof V1DomainSpec
     */
    cpu?: V1CPU;
    /**
     *
     * @type {V1Devices}
     * @memberof V1DomainSpec
     */
    devices: V1Devices;
    /**
     *
     * @type {V1Features}
     * @memberof V1DomainSpec
     */
    features?: V1Features;
    /**
     *
     * @type {V1Firmware}
     * @memberof V1DomainSpec
     */
    firmware?: V1Firmware;
    /**
     * Controls whether or not disks will share IOThreads. Omitting IOThreadsPolicy disables use of IOThreads. One of: shared, auto
     * @type {string}
     * @memberof V1DomainSpec
     */
    ioThreadsPolicy?: string;
    /**
     *
     * @type {V1LaunchSecurity}
     * @memberof V1DomainSpec
     */
    launchSecurity?: V1LaunchSecurity;
    /**
     *
     * @type {V1Machine}
     * @memberof V1DomainSpec
     */
    machine?: V1Machine;
    /**
     *
     * @type {V1Memory}
     * @memberof V1DomainSpec
     */
    memory?: V1Memory;
    /**
     *
     * @type {V1ResourceRequirements}
     * @memberof V1DomainSpec
     */
    resources?: V1ResourceRequirements;
}
/**
 * Check if a given object implements the V1DomainSpec interface.
 */
export declare function instanceOfV1DomainSpec(value: object): value is V1DomainSpec;
export declare function V1DomainSpecFromJSON(json: any): V1DomainSpec;
export declare function V1DomainSpecFromJSONTyped(json: any, _ignoreDiscriminator: boolean): V1DomainSpec;
export declare function V1DomainSpecToJSON(json: any): V1DomainSpec;
export declare function V1DomainSpecToJSONTyped(value?: V1DomainSpec | null, _ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=V1DomainSpec.d.ts.map