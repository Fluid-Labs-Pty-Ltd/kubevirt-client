/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { V1ACPI } from './V1ACPI.js';
import type { V1Bootloader } from './V1Bootloader.js';
import type { V1KernelBoot } from './V1KernelBoot.js';
/**
 *
 * @export
 * @interface V1Firmware
 */
export interface V1Firmware {
    /**
     *
     * @type {V1ACPI}
     * @memberof V1Firmware
     */
    acpi?: V1ACPI;
    /**
     *
     * @type {V1Bootloader}
     * @memberof V1Firmware
     */
    bootloader?: V1Bootloader;
    /**
     *
     * @type {V1KernelBoot}
     * @memberof V1Firmware
     */
    kernelBoot?: V1KernelBoot;
    /**
     * The system-serial-number in SMBIOS
     * @type {string}
     * @memberof V1Firmware
     */
    serial?: string;
    /**
     * UUID reported by the vmi bios. Defaults to a random generated uid.
     * @type {string}
     * @memberof V1Firmware
     */
    uuid?: string;
}
/**
 * Check if a given object implements the V1Firmware interface.
 */
export declare function instanceOfV1Firmware(value: object): value is V1Firmware;
export declare function V1FirmwareFromJSON(json: any): V1Firmware;
export declare function V1FirmwareFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1Firmware;
export declare function V1FirmwareToJSON(json: any): V1Firmware;
export declare function V1FirmwareToJSONTyped(value?: V1Firmware | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=V1Firmware.d.ts.map