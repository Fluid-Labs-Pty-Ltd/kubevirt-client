/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1InterfaceBindingMigration } from '../models/V1InterfaceBindingMigration.js';
import { V1ResourceRequirementsWithoutClaims } from '../models/V1ResourceRequirementsWithoutClaims.js';
export declare class V1InterfaceBindingPlugin {
    'computeResourceOverhead'?: V1ResourceRequirementsWithoutClaims;
    /**
    * DomainAttachmentType is a standard domain network attachment method kubevirt supports. Supported values: \"tap\", \"managedTap\" (since v1.4). The standard domain attachment can be used instead or in addition to the sidecarImage. version: 1alphav1
    */
    'domainAttachmentType'?: string;
    /**
    * DownwardAPI specifies what kind of data should be exposed to the binding plugin sidecar. Supported values: \"device-info\" version: v1alphav1
    */
    'downwardAPI'?: string;
    'migration'?: V1InterfaceBindingMigration;
    /**
    * NetworkAttachmentDefinition references to a NetworkAttachmentDefinition CR object. Format: <name>, <namespace>/<name>. If namespace is not specified, VMI namespace is assumed. version: 1alphav1
    */
    'networkAttachmentDefinition'?: string;
    /**
    * SidecarImage references a container image that runs in the virt-launcher pod. The sidecar handles (libvirt) domain configuration and optional services. version: 1alphav1
    */
    'sidecarImage'?: string;
    static readonly discriminator: string | undefined;
    static readonly mapping: {
        [index: string]: string;
    } | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
//# sourceMappingURL=V1InterfaceBindingPlugin.d.ts.map