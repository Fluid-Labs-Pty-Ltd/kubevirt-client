/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1ComponentConfigFromJSON, V1ComponentConfigToJSON, } from './V1ComponentConfig.js';
import { V1KubeVirtConfigurationFromJSON, V1KubeVirtConfigurationToJSON, } from './V1KubeVirtConfiguration.js';
import { V1KubeVirtWorkloadUpdateStrategyFromJSON, V1KubeVirtWorkloadUpdateStrategyToJSON, } from './V1KubeVirtWorkloadUpdateStrategy.js';
import { K8sIoApiCoreV1LocalObjectReferenceFromJSON, K8sIoApiCoreV1LocalObjectReferenceToJSON, } from './K8sIoApiCoreV1LocalObjectReference.js';
import { V1CustomizeComponentsFromJSON, V1CustomizeComponentsToJSON, } from './V1CustomizeComponents.js';
import { V1KubeVirtCertificateRotateStrategyFromJSON, V1KubeVirtCertificateRotateStrategyToJSON, } from './V1KubeVirtCertificateRotateStrategy.js';
/**
 * @export
 */
export const V1KubeVirtSpecImagePullPolicyEnum = {
    Always: 'Always',
    IfNotPresent: 'IfNotPresent',
    Never: 'Never'
};
/**
 * Check if a given object implements the V1KubeVirtSpec interface.
 */
export function instanceOfV1KubeVirtSpec(value) {
    return true;
}
export function V1KubeVirtSpecFromJSON(json) {
    return V1KubeVirtSpecFromJSONTyped(json, false);
}
export function V1KubeVirtSpecFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'certificateRotateStrategy': json['certificateRotateStrategy'] == null ? undefined : V1KubeVirtCertificateRotateStrategyFromJSON(json['certificateRotateStrategy']),
        '_configuration': json['configuration'] == null ? undefined : V1KubeVirtConfigurationFromJSON(json['configuration']),
        'customizeComponents': json['customizeComponents'] == null ? undefined : V1CustomizeComponentsFromJSON(json['customizeComponents']),
        'imagePullPolicy': json['imagePullPolicy'] == null ? undefined : json['imagePullPolicy'],
        'imagePullSecrets': json['imagePullSecrets'] == null ? undefined : (json['imagePullSecrets'].map(K8sIoApiCoreV1LocalObjectReferenceFromJSON)),
        'imageRegistry': json['imageRegistry'] == null ? undefined : json['imageRegistry'],
        'imageTag': json['imageTag'] == null ? undefined : json['imageTag'],
        'infra': json['infra'] == null ? undefined : V1ComponentConfigFromJSON(json['infra']),
        'monitorAccount': json['monitorAccount'] == null ? undefined : json['monitorAccount'],
        'monitorNamespace': json['monitorNamespace'] == null ? undefined : json['monitorNamespace'],
        'productComponent': json['productComponent'] == null ? undefined : json['productComponent'],
        'productName': json['productName'] == null ? undefined : json['productName'],
        'productVersion': json['productVersion'] == null ? undefined : json['productVersion'],
        'serviceMonitorNamespace': json['serviceMonitorNamespace'] == null ? undefined : json['serviceMonitorNamespace'],
        'uninstallStrategy': json['uninstallStrategy'] == null ? undefined : json['uninstallStrategy'],
        'workloadUpdateStrategy': json['workloadUpdateStrategy'] == null ? undefined : V1KubeVirtWorkloadUpdateStrategyFromJSON(json['workloadUpdateStrategy']),
        'workloads': json['workloads'] == null ? undefined : V1ComponentConfigFromJSON(json['workloads']),
    };
}
export function V1KubeVirtSpecToJSON(json) {
    return V1KubeVirtSpecToJSONTyped(json, false);
}
export function V1KubeVirtSpecToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'certificateRotateStrategy': V1KubeVirtCertificateRotateStrategyToJSON(value['certificateRotateStrategy']),
        'configuration': V1KubeVirtConfigurationToJSON(value['_configuration']),
        'customizeComponents': V1CustomizeComponentsToJSON(value['customizeComponents']),
        'imagePullPolicy': value['imagePullPolicy'],
        'imagePullSecrets': value['imagePullSecrets'] == null ? undefined : (value['imagePullSecrets'].map(K8sIoApiCoreV1LocalObjectReferenceToJSON)),
        'imageRegistry': value['imageRegistry'],
        'imageTag': value['imageTag'],
        'infra': V1ComponentConfigToJSON(value['infra']),
        'monitorAccount': value['monitorAccount'],
        'monitorNamespace': value['monitorNamespace'],
        'productComponent': value['productComponent'],
        'productName': value['productName'],
        'productVersion': value['productVersion'],
        'serviceMonitorNamespace': value['serviceMonitorNamespace'],
        'uninstallStrategy': value['uninstallStrategy'],
        'workloadUpdateStrategy': V1KubeVirtWorkloadUpdateStrategyToJSON(value['workloadUpdateStrategy']),
        'workloads': V1ComponentConfigToJSON(value['workloads']),
    };
}
//# sourceMappingURL=V1KubeVirtSpec.js.map