/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1NodeMediatedDeviceTypesConfigFromJSON, V1NodeMediatedDeviceTypesConfigToJSON, } from './V1NodeMediatedDeviceTypesConfig.js';
/**
 * Check if a given object implements the V1MediatedDevicesConfiguration interface.
 */
export function instanceOfV1MediatedDevicesConfiguration(value) {
    return true;
}
export function V1MediatedDevicesConfigurationFromJSON(json) {
    return V1MediatedDevicesConfigurationFromJSONTyped(json, false);
}
export function V1MediatedDevicesConfigurationFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'mediatedDeviceTypes': json['mediatedDeviceTypes'] == null ? undefined : json['mediatedDeviceTypes'],
        'mediatedDevicesTypes': json['mediatedDevicesTypes'] == null ? undefined : json['mediatedDevicesTypes'],
        'nodeMediatedDeviceTypes': json['nodeMediatedDeviceTypes'] == null ? undefined : (json['nodeMediatedDeviceTypes'].map(V1NodeMediatedDeviceTypesConfigFromJSON)),
    };
}
export function V1MediatedDevicesConfigurationToJSON(json) {
    return V1MediatedDevicesConfigurationToJSONTyped(json, false);
}
export function V1MediatedDevicesConfigurationToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'mediatedDeviceTypes': value['mediatedDeviceTypes'],
        'mediatedDevicesTypes': value['mediatedDevicesTypes'],
        'nodeMediatedDeviceTypes': value['nodeMediatedDeviceTypes'] == null ? undefined : (value['nodeMediatedDeviceTypes'].map(V1NodeMediatedDeviceTypesConfigToJSON)),
    };
}
//# sourceMappingURL=V1MediatedDevicesConfiguration.js.map