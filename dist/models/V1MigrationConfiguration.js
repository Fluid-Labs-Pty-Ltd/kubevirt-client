/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the V1MigrationConfiguration interface.
 */
export function instanceOfV1MigrationConfiguration(value) {
    return true;
}
export function V1MigrationConfigurationFromJSON(json) {
    return V1MigrationConfigurationFromJSONTyped(json, false);
}
export function V1MigrationConfigurationFromJSONTyped(json, _ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'allowAutoConverge': json['allowAutoConverge'] == null ? undefined : json['allowAutoConverge'],
        'allowPostCopy': json['allowPostCopy'] == null ? undefined : json['allowPostCopy'],
        'bandwidthPerMigration': json['bandwidthPerMigration'] == null ? undefined : json['bandwidthPerMigration'],
        'completionTimeoutPerGiB': json['completionTimeoutPerGiB'] == null ? undefined : json['completionTimeoutPerGiB'],
        'disableTLS': json['disableTLS'] == null ? undefined : json['disableTLS'],
        'matchSELinuxLevelOnMigration': json['matchSELinuxLevelOnMigration'] == null ? undefined : json['matchSELinuxLevelOnMigration'],
        'network': json['network'] == null ? undefined : json['network'],
        'nodeDrainTaintKey': json['nodeDrainTaintKey'] == null ? undefined : json['nodeDrainTaintKey'],
        'parallelMigrationsPerCluster': json['parallelMigrationsPerCluster'] == null ? undefined : json['parallelMigrationsPerCluster'],
        'parallelOutboundMigrationsPerNode': json['parallelOutboundMigrationsPerNode'] == null ? undefined : json['parallelOutboundMigrationsPerNode'],
        'progressTimeout': json['progressTimeout'] == null ? undefined : json['progressTimeout'],
        'unsafeMigrationOverride': json['unsafeMigrationOverride'] == null ? undefined : json['unsafeMigrationOverride'],
    };
}
export function V1MigrationConfigurationToJSON(json) {
    return V1MigrationConfigurationToJSONTyped(json, false);
}
export function V1MigrationConfigurationToJSONTyped(value, _ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'allowAutoConverge': value['allowAutoConverge'],
        'allowPostCopy': value['allowPostCopy'],
        'bandwidthPerMigration': value['bandwidthPerMigration'],
        'completionTimeoutPerGiB': value['completionTimeoutPerGiB'],
        'disableTLS': value['disableTLS'],
        'matchSELinuxLevelOnMigration': value['matchSELinuxLevelOnMigration'],
        'network': value['network'],
        'nodeDrainTaintKey': value['nodeDrainTaintKey'],
        'parallelMigrationsPerCluster': value['parallelMigrationsPerCluster'],
        'parallelOutboundMigrationsPerNode': value['parallelOutboundMigrationsPerNode'],
        'progressTimeout': value['progressTimeout'],
        'unsafeMigrationOverride': value['unsafeMigrationOverride'],
    };
}
//# sourceMappingURL=V1MigrationConfiguration.js.map