/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { K8sIoApiCoreV1Affinity } from './K8sIoApiCoreV1Affinity.js';
import type { K8sIoApiCoreV1Toleration } from './K8sIoApiCoreV1Toleration.js';
/**
 * NodePlacement describes node scheduling configuration.
 * @export
 * @interface V1NodePlacement
 */
export interface V1NodePlacement {
    /**
     *
     * @type {K8sIoApiCoreV1Affinity}
     * @memberof V1NodePlacement
     */
    affinity?: K8sIoApiCoreV1Affinity;
    /**
     * nodeSelector is the node selector applied to the relevant kind of pods It specifies a map of key-value pairs: for the pod to be eligible to run on a node, the node must have each of the indicated key-value pairs as labels (it can have additional labels as well). See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
     * @type {{ [key: string]: string; }}
     * @memberof V1NodePlacement
     */
    nodeSelector?: {
        [key: string]: string;
    };
    /**
     * tolerations is a list of tolerations applied to the relevant kind of pods See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ for more info. These are additional tolerations other than default ones.
     * @type {Array<K8sIoApiCoreV1Toleration>}
     * @memberof V1NodePlacement
     */
    tolerations?: Array<K8sIoApiCoreV1Toleration>;
}
/**
 * Check if a given object implements the V1NodePlacement interface.
 */
export declare function instanceOfV1NodePlacement(value: object): value is V1NodePlacement;
export declare function V1NodePlacementFromJSON(json: any): V1NodePlacement;
export declare function V1NodePlacementFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1NodePlacement;
export declare function V1NodePlacementToJSON(json: any): V1NodePlacement;
export declare function V1NodePlacementToJSONTyped(value?: V1NodePlacement | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=V1NodePlacement.d.ts.map