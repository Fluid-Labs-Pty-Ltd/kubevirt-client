/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1VirtualMachineInstanceFileSystemDiskFromJSON, V1VirtualMachineInstanceFileSystemDiskToJSON, } from './V1VirtualMachineInstanceFileSystemDisk.js';
/**
 * Check if a given object implements the V1VirtualMachineInstanceFileSystem interface.
 */
export function instanceOfV1VirtualMachineInstanceFileSystem(value) {
    if (!('diskName' in value) || value['diskName'] === undefined)
        return false;
    if (!('fileSystemType' in value) || value['fileSystemType'] === undefined)
        return false;
    if (!('mountPoint' in value) || value['mountPoint'] === undefined)
        return false;
    if (!('totalBytes' in value) || value['totalBytes'] === undefined)
        return false;
    if (!('usedBytes' in value) || value['usedBytes'] === undefined)
        return false;
    return true;
}
export function V1VirtualMachineInstanceFileSystemFromJSON(json) {
    return V1VirtualMachineInstanceFileSystemFromJSONTyped(json, false);
}
export function V1VirtualMachineInstanceFileSystemFromJSONTyped(json, _ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'disk': json['disk'] == null ? undefined : (json['disk'].map(V1VirtualMachineInstanceFileSystemDiskFromJSON)),
        'diskName': json['diskName'],
        'fileSystemType': json['fileSystemType'],
        'mountPoint': json['mountPoint'],
        'totalBytes': json['totalBytes'],
        'usedBytes': json['usedBytes'],
    };
}
export function V1VirtualMachineInstanceFileSystemToJSON(json) {
    return V1VirtualMachineInstanceFileSystemToJSONTyped(json, false);
}
export function V1VirtualMachineInstanceFileSystemToJSONTyped(value, _ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'disk': value['disk'] == null ? undefined : (value['disk'].map(V1VirtualMachineInstanceFileSystemDiskToJSON)),
        'diskName': value['diskName'],
        'fileSystemType': value['fileSystemType'],
        'mountPoint': value['mountPoint'],
        'totalBytes': value['totalBytes'],
        'usedBytes': value['usedBytes'],
    };
}
//# sourceMappingURL=V1VirtualMachineInstanceFileSystem.js.map