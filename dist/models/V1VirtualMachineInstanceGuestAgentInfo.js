/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1VirtualMachineInstanceGuestOSInfoFromJSON, V1VirtualMachineInstanceGuestOSInfoToJSON, } from './V1VirtualMachineInstanceGuestOSInfo.js';
import { V1VirtualMachineInstanceFileSystemInfoFromJSON, V1VirtualMachineInstanceFileSystemInfoToJSON, } from './V1VirtualMachineInstanceFileSystemInfo.js';
import { V1GuestAgentCommandInfoFromJSON, V1GuestAgentCommandInfoToJSON, } from './V1GuestAgentCommandInfo.js';
import { V1VirtualMachineInstanceGuestOSUserFromJSON, V1VirtualMachineInstanceGuestOSUserToJSON, } from './V1VirtualMachineInstanceGuestOSUser.js';
/**
 * Check if a given object implements the V1VirtualMachineInstanceGuestAgentInfo interface.
 */
export function instanceOfV1VirtualMachineInstanceGuestAgentInfo(value) {
    return true;
}
export function V1VirtualMachineInstanceGuestAgentInfoFromJSON(json) {
    return V1VirtualMachineInstanceGuestAgentInfoFromJSONTyped(json, false);
}
export function V1VirtualMachineInstanceGuestAgentInfoFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'apiVersion': json['apiVersion'] == null ? undefined : json['apiVersion'],
        'fsFreezeStatus': json['fsFreezeStatus'] == null ? undefined : json['fsFreezeStatus'],
        'fsInfo': json['fsInfo'] == null ? undefined : V1VirtualMachineInstanceFileSystemInfoFromJSON(json['fsInfo']),
        'guestAgentVersion': json['guestAgentVersion'] == null ? undefined : json['guestAgentVersion'],
        'hostname': json['hostname'] == null ? undefined : json['hostname'],
        'kind': json['kind'] == null ? undefined : json['kind'],
        'os': json['os'] == null ? undefined : V1VirtualMachineInstanceGuestOSInfoFromJSON(json['os']),
        'supportedCommands': json['supportedCommands'] == null ? undefined : (json['supportedCommands'].map(V1GuestAgentCommandInfoFromJSON)),
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
        'userList': json['userList'] == null ? undefined : (json['userList'].map(V1VirtualMachineInstanceGuestOSUserFromJSON)),
    };
}
export function V1VirtualMachineInstanceGuestAgentInfoToJSON(json) {
    return V1VirtualMachineInstanceGuestAgentInfoToJSONTyped(json, false);
}
export function V1VirtualMachineInstanceGuestAgentInfoToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'apiVersion': value['apiVersion'],
        'fsFreezeStatus': value['fsFreezeStatus'],
        'fsInfo': V1VirtualMachineInstanceFileSystemInfoToJSON(value['fsInfo']),
        'guestAgentVersion': value['guestAgentVersion'],
        'hostname': value['hostname'],
        'kind': value['kind'],
        'os': V1VirtualMachineInstanceGuestOSInfoToJSON(value['os']),
        'supportedCommands': value['supportedCommands'] == null ? undefined : (value['supportedCommands'].map(V1GuestAgentCommandInfoToJSON)),
        'timezone': value['timezone'],
        'userList': value['userList'] == null ? undefined : (value['userList'].map(V1VirtualMachineInstanceGuestOSUserToJSON)),
    };
}
//# sourceMappingURL=V1VirtualMachineInstanceGuestAgentInfo.js.map