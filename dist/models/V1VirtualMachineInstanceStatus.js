/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1VolumeStatusFromJSON, V1VolumeStatusToJSON, } from './V1VolumeStatus.js';
import { V1VirtualMachineInstancePhaseTransitionTimestampFromJSON, V1VirtualMachineInstancePhaseTransitionTimestampToJSON, } from './V1VirtualMachineInstancePhaseTransitionTimestamp.js';
import { V1VirtualMachineInstanceConditionFromJSON, V1VirtualMachineInstanceConditionToJSON, } from './V1VirtualMachineInstanceCondition.js';
import { V1CPUTopologyFromJSON, V1CPUTopologyToJSON, } from './V1CPUTopology.js';
import { V1StorageMigratedVolumeInfoFromJSON, V1StorageMigratedVolumeInfoToJSON, } from './V1StorageMigratedVolumeInfo.js';
import { V1MemoryStatusFromJSON, V1MemoryStatusToJSON, } from './V1MemoryStatus.js';
import { V1VirtualMachineInstanceGuestOSInfoFromJSON, V1VirtualMachineInstanceGuestOSInfoToJSON, } from './V1VirtualMachineInstanceGuestOSInfo.js';
import { V1VirtualMachineInstanceMigrationStateFromJSON, V1VirtualMachineInstanceMigrationStateToJSON, } from './V1VirtualMachineInstanceMigrationState.js';
import { V1VirtualMachineInstanceNetworkInterfaceFromJSON, V1VirtualMachineInstanceNetworkInterfaceToJSON, } from './V1VirtualMachineInstanceNetworkInterface.js';
import { V1KernelBootStatusFromJSON, V1KernelBootStatusToJSON, } from './V1KernelBootStatus.js';
import { V1TopologyHintsFromJSON, V1TopologyHintsToJSON, } from './V1TopologyHints.js';
import { V1MachineFromJSON, V1MachineToJSON, } from './V1Machine.js';
/**
 * @export
 */
export const V1VirtualMachineInstanceStatusQosClassEnum = {
    BestEffort: 'BestEffort',
    Burstable: 'Burstable',
    Guaranteed: 'Guaranteed'
};
/**
 * Check if a given object implements the V1VirtualMachineInstanceStatus interface.
 */
export function instanceOfV1VirtualMachineInstanceStatus(value) {
    return true;
}
export function V1VirtualMachineInstanceStatusFromJSON(json) {
    return V1VirtualMachineInstanceStatusFromJSONTyped(json, false);
}
export function V1VirtualMachineInstanceStatusFromJSONTyped(json, _ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'vSOCKCID': json['VSOCKCID'] == null ? undefined : json['VSOCKCID'],
        'activePods': json['activePods'] == null ? undefined : json['activePods'],
        'conditions': json['conditions'] == null ? undefined : (json['conditions'].map(V1VirtualMachineInstanceConditionFromJSON)),
        'currentCPUTopology': json['currentCPUTopology'] == null ? undefined : V1CPUTopologyFromJSON(json['currentCPUTopology']),
        'evacuationNodeName': json['evacuationNodeName'] == null ? undefined : json['evacuationNodeName'],
        'fsFreezeStatus': json['fsFreezeStatus'] == null ? undefined : json['fsFreezeStatus'],
        'guestOSInfo': json['guestOSInfo'] == null ? undefined : V1VirtualMachineInstanceGuestOSInfoFromJSON(json['guestOSInfo']),
        'interfaces': json['interfaces'] == null ? undefined : (json['interfaces'].map(V1VirtualMachineInstanceNetworkInterfaceFromJSON)),
        'kernelBootStatus': json['kernelBootStatus'] == null ? undefined : V1KernelBootStatusFromJSON(json['kernelBootStatus']),
        'launcherContainerImageVersion': json['launcherContainerImageVersion'] == null ? undefined : json['launcherContainerImageVersion'],
        'machine': json['machine'] == null ? undefined : V1MachineFromJSON(json['machine']),
        'memory': json['memory'] == null ? undefined : V1MemoryStatusFromJSON(json['memory']),
        'migratedVolumes': json['migratedVolumes'] == null ? undefined : (json['migratedVolumes'].map(V1StorageMigratedVolumeInfoFromJSON)),
        'migrationMethod': json['migrationMethod'] == null ? undefined : json['migrationMethod'],
        'migrationState': json['migrationState'] == null ? undefined : V1VirtualMachineInstanceMigrationStateFromJSON(json['migrationState']),
        'migrationTransport': json['migrationTransport'] == null ? undefined : json['migrationTransport'],
        'nodeName': json['nodeName'] == null ? undefined : json['nodeName'],
        'phase': json['phase'] == null ? undefined : json['phase'],
        'phaseTransitionTimestamps': json['phaseTransitionTimestamps'] == null ? undefined : (json['phaseTransitionTimestamps'].map(V1VirtualMachineInstancePhaseTransitionTimestampFromJSON)),
        'qosClass': json['qosClass'] == null ? undefined : json['qosClass'],
        'reason': json['reason'] == null ? undefined : json['reason'],
        'runtimeUser': json['runtimeUser'] == null ? undefined : json['runtimeUser'],
        'selinuxContext': json['selinuxContext'] == null ? undefined : json['selinuxContext'],
        'topologyHints': json['topologyHints'] == null ? undefined : V1TopologyHintsFromJSON(json['topologyHints']),
        'virtualMachineRevisionName': json['virtualMachineRevisionName'] == null ? undefined : json['virtualMachineRevisionName'],
        'volumeStatus': json['volumeStatus'] == null ? undefined : (json['volumeStatus'].map(V1VolumeStatusFromJSON)),
    };
}
export function V1VirtualMachineInstanceStatusToJSON(json) {
    return V1VirtualMachineInstanceStatusToJSONTyped(json, false);
}
export function V1VirtualMachineInstanceStatusToJSONTyped(value, _ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'VSOCKCID': value['vSOCKCID'],
        'activePods': value['activePods'],
        'conditions': value['conditions'] == null ? undefined : (value['conditions'].map(V1VirtualMachineInstanceConditionToJSON)),
        'currentCPUTopology': V1CPUTopologyToJSON(value['currentCPUTopology']),
        'evacuationNodeName': value['evacuationNodeName'],
        'fsFreezeStatus': value['fsFreezeStatus'],
        'guestOSInfo': V1VirtualMachineInstanceGuestOSInfoToJSON(value['guestOSInfo']),
        'interfaces': value['interfaces'] == null ? undefined : (value['interfaces'].map(V1VirtualMachineInstanceNetworkInterfaceToJSON)),
        'kernelBootStatus': V1KernelBootStatusToJSON(value['kernelBootStatus']),
        'launcherContainerImageVersion': value['launcherContainerImageVersion'],
        'machine': V1MachineToJSON(value['machine']),
        'memory': V1MemoryStatusToJSON(value['memory']),
        'migratedVolumes': value['migratedVolumes'] == null ? undefined : (value['migratedVolumes'].map(V1StorageMigratedVolumeInfoToJSON)),
        'migrationMethod': value['migrationMethod'],
        'migrationState': V1VirtualMachineInstanceMigrationStateToJSON(value['migrationState']),
        'migrationTransport': value['migrationTransport'],
        'nodeName': value['nodeName'],
        'phase': value['phase'],
        'phaseTransitionTimestamps': value['phaseTransitionTimestamps'] == null ? undefined : (value['phaseTransitionTimestamps'].map(V1VirtualMachineInstancePhaseTransitionTimestampToJSON)),
        'qosClass': value['qosClass'],
        'reason': value['reason'],
        'runtimeUser': value['runtimeUser'],
        'selinuxContext': value['selinuxContext'],
        'topologyHints': V1TopologyHintsToJSON(value['topologyHints']),
        'virtualMachineRevisionName': value['virtualMachineRevisionName'],
        'volumeStatus': value['volumeStatus'] == null ? undefined : (value['volumeStatus'].map(V1VolumeStatusToJSON)),
    };
}
//# sourceMappingURL=V1VirtualMachineInstanceStatus.js.map