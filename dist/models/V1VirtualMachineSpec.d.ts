/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { V1PreferenceMatcher } from './V1PreferenceMatcher.js';
import type { V1DataVolumeTemplateSpec } from './V1DataVolumeTemplateSpec.js';
import type { V1InstancetypeMatcher } from './V1InstancetypeMatcher.js';
import type { V1VirtualMachineInstanceTemplateSpec } from './V1VirtualMachineInstanceTemplateSpec.js';
/**
 * VirtualMachineSpec describes how the proper VirtualMachine should look like
 * @export
 * @interface V1VirtualMachineSpec
 */
export interface V1VirtualMachineSpec {
    /**
     * dataVolumeTemplates is a list of dataVolumes that the VirtualMachineInstance template can reference. DataVolumes in this list are dynamically created for the VirtualMachine and are tied to the VirtualMachine's life-cycle.
     * @type {Array<V1DataVolumeTemplateSpec>}
     * @memberof V1VirtualMachineSpec
     */
    dataVolumeTemplates?: Array<V1DataVolumeTemplateSpec>;
    /**
     *
     * @type {V1InstancetypeMatcher}
     * @memberof V1VirtualMachineSpec
     */
    instancetype?: V1InstancetypeMatcher;
    /**
     *
     * @type {V1PreferenceMatcher}
     * @memberof V1VirtualMachineSpec
     */
    preference?: V1PreferenceMatcher;
    /**
     * Running state indicates the requested running state of the VirtualMachineInstance mutually exclusive with Running
     * @type {string}
     * @memberof V1VirtualMachineSpec
     */
    runStrategy?: string;
    /**
     * Running controls whether the associatied VirtualMachineInstance is created or not Mutually exclusive with RunStrategy Deprecated: VirtualMachineInstance field "Running" is now deprecated, please use RunStrategy instead.
     * @type {boolean}
     * @memberof V1VirtualMachineSpec
     */
    running?: boolean;
    /**
     *
     * @type {V1VirtualMachineInstanceTemplateSpec}
     * @memberof V1VirtualMachineSpec
     */
    template: V1VirtualMachineInstanceTemplateSpec;
    /**
     * UpdateVolumesStrategy is the strategy to apply on volumes updates
     * @type {string}
     * @memberof V1VirtualMachineSpec
     */
    updateVolumesStrategy?: string;
}
/**
 * Check if a given object implements the V1VirtualMachineSpec interface.
 */
export declare function instanceOfV1VirtualMachineSpec(value: object): value is V1VirtualMachineSpec;
export declare function V1VirtualMachineSpecFromJSON(json: any): V1VirtualMachineSpec;
export declare function V1VirtualMachineSpecFromJSONTyped(json: any, _ignoreDiscriminator: boolean): V1VirtualMachineSpec;
export declare function V1VirtualMachineSpecToJSON(json: any): V1VirtualMachineSpec;
export declare function V1VirtualMachineSpecToJSONTyped(value?: V1VirtualMachineSpec | null, _ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=V1VirtualMachineSpec.d.ts.map