/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1VirtualMachineConditionFromJSON, V1VirtualMachineConditionToJSON, } from './V1VirtualMachineCondition.js';
import { V1VirtualMachineStartFailureFromJSON, V1VirtualMachineStartFailureToJSON, } from './V1VirtualMachineStartFailure.js';
import { V1VirtualMachineStateChangeRequestFromJSON, V1VirtualMachineStateChangeRequestToJSON, } from './V1VirtualMachineStateChangeRequest.js';
import { V1VirtualMachineVolumeRequestFromJSON, V1VirtualMachineVolumeRequestToJSON, } from './V1VirtualMachineVolumeRequest.js';
import { V1VolumeSnapshotStatusFromJSON, V1VolumeSnapshotStatusToJSON, } from './V1VolumeSnapshotStatus.js';
import { V1VolumeUpdateStateFromJSON, V1VolumeUpdateStateToJSON, } from './V1VolumeUpdateState.js';
import { V1VirtualMachineMemoryDumpRequestFromJSON, V1VirtualMachineMemoryDumpRequestToJSON, } from './V1VirtualMachineMemoryDumpRequest.js';
/**
 * Check if a given object implements the V1VirtualMachineStatus interface.
 */
export function instanceOfV1VirtualMachineStatus(value) {
    return true;
}
export function V1VirtualMachineStatusFromJSON(json) {
    return V1VirtualMachineStatusFromJSONTyped(json, false);
}
export function V1VirtualMachineStatusFromJSONTyped(json, _ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'conditions': json['conditions'] == null ? undefined : (json['conditions'].map(V1VirtualMachineConditionFromJSON)),
        'created': json['created'] == null ? undefined : json['created'],
        'desiredGeneration': json['desiredGeneration'] == null ? undefined : json['desiredGeneration'],
        'memoryDumpRequest': json['memoryDumpRequest'] == null ? undefined : V1VirtualMachineMemoryDumpRequestFromJSON(json['memoryDumpRequest']),
        'observedGeneration': json['observedGeneration'] == null ? undefined : json['observedGeneration'],
        'printableStatus': json['printableStatus'] == null ? undefined : json['printableStatus'],
        'ready': json['ready'] == null ? undefined : json['ready'],
        'restoreInProgress': json['restoreInProgress'] == null ? undefined : json['restoreInProgress'],
        'runStrategy': json['runStrategy'] == null ? undefined : json['runStrategy'],
        'snapshotInProgress': json['snapshotInProgress'] == null ? undefined : json['snapshotInProgress'],
        'startFailure': json['startFailure'] == null ? undefined : V1VirtualMachineStartFailureFromJSON(json['startFailure']),
        'stateChangeRequests': json['stateChangeRequests'] == null ? undefined : (json['stateChangeRequests'].map(V1VirtualMachineStateChangeRequestFromJSON)),
        'volumeRequests': json['volumeRequests'] == null ? undefined : (json['volumeRequests'].map(V1VirtualMachineVolumeRequestFromJSON)),
        'volumeSnapshotStatuses': json['volumeSnapshotStatuses'] == null ? undefined : (json['volumeSnapshotStatuses'].map(V1VolumeSnapshotStatusFromJSON)),
        'volumeUpdateState': json['volumeUpdateState'] == null ? undefined : V1VolumeUpdateStateFromJSON(json['volumeUpdateState']),
    };
}
export function V1VirtualMachineStatusToJSON(json) {
    return V1VirtualMachineStatusToJSONTyped(json, false);
}
export function V1VirtualMachineStatusToJSONTyped(value, _ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'conditions': value['conditions'] == null ? undefined : (value['conditions'].map(V1VirtualMachineConditionToJSON)),
        'created': value['created'],
        'desiredGeneration': value['desiredGeneration'],
        'memoryDumpRequest': V1VirtualMachineMemoryDumpRequestToJSON(value['memoryDumpRequest']),
        'observedGeneration': value['observedGeneration'],
        'printableStatus': value['printableStatus'],
        'ready': value['ready'],
        'restoreInProgress': value['restoreInProgress'],
        'runStrategy': value['runStrategy'],
        'snapshotInProgress': value['snapshotInProgress'],
        'startFailure': V1VirtualMachineStartFailureToJSON(value['startFailure']),
        'stateChangeRequests': value['stateChangeRequests'] == null ? undefined : (value['stateChangeRequests'].map(V1VirtualMachineStateChangeRequestToJSON)),
        'volumeRequests': value['volumeRequests'] == null ? undefined : (value['volumeRequests'].map(V1VirtualMachineVolumeRequestToJSON)),
        'volumeSnapshotStatuses': value['volumeSnapshotStatuses'] == null ? undefined : (value['volumeSnapshotStatuses'].map(V1VolumeSnapshotStatusToJSON)),
        'volumeUpdateState': V1VolumeUpdateStateToJSON(value['volumeUpdateState']),
    };
}
//# sourceMappingURL=V1VirtualMachineStatus.js.map