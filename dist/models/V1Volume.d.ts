/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { V1SysprepSource } from './V1SysprepSource.js';
import type { V1DownwardAPIVolumeSource } from './V1DownwardAPIVolumeSource.js';
import type { V1EmptyDiskSource } from './V1EmptyDiskSource.js';
import type { V1MemoryDumpVolumeSource } from './V1MemoryDumpVolumeSource.js';
import type { V1DataVolumeSource } from './V1DataVolumeSource.js';
import type { V1SecretVolumeSource } from './V1SecretVolumeSource.js';
import type { V1EphemeralVolumeSource } from './V1EphemeralVolumeSource.js';
import type { V1HostDisk } from './V1HostDisk.js';
import type { V1CloudInitNoCloudSource } from './V1CloudInitNoCloudSource.js';
import type { V1ContainerDiskSource } from './V1ContainerDiskSource.js';
import type { V1ServiceAccountVolumeSource } from './V1ServiceAccountVolumeSource.js';
import type { V1PersistentVolumeClaimVolumeSource } from './V1PersistentVolumeClaimVolumeSource.js';
import type { V1CloudInitConfigDriveSource } from './V1CloudInitConfigDriveSource.js';
import type { V1ConfigMapVolumeSource } from './V1ConfigMapVolumeSource.js';
/**
 * Volume represents a named volume in a vmi.
 * @export
 * @interface V1Volume
 */
export interface V1Volume {
    /**
     *
     * @type {V1CloudInitConfigDriveSource}
     * @memberof V1Volume
     */
    cloudInitConfigDrive?: V1CloudInitConfigDriveSource;
    /**
     *
     * @type {V1CloudInitNoCloudSource}
     * @memberof V1Volume
     */
    cloudInitNoCloud?: V1CloudInitNoCloudSource;
    /**
     *
     * @type {V1ConfigMapVolumeSource}
     * @memberof V1Volume
     */
    configMap?: V1ConfigMapVolumeSource;
    /**
     *
     * @type {V1ContainerDiskSource}
     * @memberof V1Volume
     */
    containerDisk?: V1ContainerDiskSource;
    /**
     *
     * @type {V1DataVolumeSource}
     * @memberof V1Volume
     */
    dataVolume?: V1DataVolumeSource;
    /**
     *
     * @type {V1DownwardAPIVolumeSource}
     * @memberof V1Volume
     */
    downwardAPI?: V1DownwardAPIVolumeSource;
    /**
     * DownwardMetricsVolumeSource adds a very small disk to VMIs which contains a limited view of host and guest metrics. The disk content is compatible with vhostmd (https://github.com/vhostmd/vhostmd) and vm-dump-metrics.
     * @type {object}
     * @memberof V1Volume
     */
    downwardMetrics?: object;
    /**
     *
     * @type {V1EmptyDiskSource}
     * @memberof V1Volume
     */
    emptyDisk?: V1EmptyDiskSource;
    /**
     *
     * @type {V1EphemeralVolumeSource}
     * @memberof V1Volume
     */
    ephemeral?: V1EphemeralVolumeSource;
    /**
     *
     * @type {V1HostDisk}
     * @memberof V1Volume
     */
    hostDisk?: V1HostDisk;
    /**
     *
     * @type {V1MemoryDumpVolumeSource}
     * @memberof V1Volume
     */
    memoryDump?: V1MemoryDumpVolumeSource;
    /**
     * Volume's name. Must be a DNS_LABEL and unique within the vmi. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
     * @type {string}
     * @memberof V1Volume
     */
    name: string;
    /**
     *
     * @type {V1PersistentVolumeClaimVolumeSource}
     * @memberof V1Volume
     */
    persistentVolumeClaim?: V1PersistentVolumeClaimVolumeSource;
    /**
     *
     * @type {V1SecretVolumeSource}
     * @memberof V1Volume
     */
    secret?: V1SecretVolumeSource;
    /**
     *
     * @type {V1ServiceAccountVolumeSource}
     * @memberof V1Volume
     */
    serviceAccount?: V1ServiceAccountVolumeSource;
    /**
     *
     * @type {V1SysprepSource}
     * @memberof V1Volume
     */
    sysprep?: V1SysprepSource;
}
/**
 * Check if a given object implements the V1Volume interface.
 */
export declare function instanceOfV1Volume(value: object): value is V1Volume;
export declare function V1VolumeFromJSON(json: any): V1Volume;
export declare function V1VolumeFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1Volume;
export declare function V1VolumeToJSON(json: any): V1Volume;
export declare function V1VolumeToJSONTyped(value?: V1Volume | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=V1Volume.d.ts.map