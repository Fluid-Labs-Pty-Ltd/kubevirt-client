/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1ContainerDiskInfoFromJSON, V1ContainerDiskInfoToJSON, } from './V1ContainerDiskInfo.js';
import { V1HotplugVolumeStatusFromJSON, V1HotplugVolumeStatusToJSON, } from './V1HotplugVolumeStatus.js';
import { V1DomainMemoryDumpInfoFromJSON, V1DomainMemoryDumpInfoToJSON, } from './V1DomainMemoryDumpInfo.js';
import { V1PersistentVolumeClaimInfoFromJSON, V1PersistentVolumeClaimInfoToJSON, } from './V1PersistentVolumeClaimInfo.js';
/**
 * Check if a given object implements the V1VolumeStatus interface.
 */
export function instanceOfV1VolumeStatus(value) {
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('target' in value) || value['target'] === undefined)
        return false;
    return true;
}
export function V1VolumeStatusFromJSON(json) {
    return V1VolumeStatusFromJSONTyped(json, false);
}
export function V1VolumeStatusFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'containerDiskVolume': json['containerDiskVolume'] == null ? undefined : V1ContainerDiskInfoFromJSON(json['containerDiskVolume']),
        'hotplugVolume': json['hotplugVolume'] == null ? undefined : V1HotplugVolumeStatusFromJSON(json['hotplugVolume']),
        'memoryDumpVolume': json['memoryDumpVolume'] == null ? undefined : V1DomainMemoryDumpInfoFromJSON(json['memoryDumpVolume']),
        'message': json['message'] == null ? undefined : json['message'],
        'name': json['name'],
        'persistentVolumeClaimInfo': json['persistentVolumeClaimInfo'] == null ? undefined : V1PersistentVolumeClaimInfoFromJSON(json['persistentVolumeClaimInfo']),
        'phase': json['phase'] == null ? undefined : json['phase'],
        'reason': json['reason'] == null ? undefined : json['reason'],
        'size': json['size'] == null ? undefined : json['size'],
        'target': json['target'],
    };
}
export function V1VolumeStatusToJSON(json) {
    return V1VolumeStatusToJSONTyped(json, false);
}
export function V1VolumeStatusToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'containerDiskVolume': V1ContainerDiskInfoToJSON(value['containerDiskVolume']),
        'hotplugVolume': V1HotplugVolumeStatusToJSON(value['hotplugVolume']),
        'memoryDumpVolume': V1DomainMemoryDumpInfoToJSON(value['memoryDumpVolume']),
        'message': value['message'],
        'name': value['name'],
        'persistentVolumeClaimInfo': V1PersistentVolumeClaimInfoToJSON(value['persistentVolumeClaimInfo']),
        'phase': value['phase'],
        'reason': value['reason'],
        'size': value['size'],
        'target': value['target'],
    };
}
//# sourceMappingURL=V1VolumeStatus.js.map