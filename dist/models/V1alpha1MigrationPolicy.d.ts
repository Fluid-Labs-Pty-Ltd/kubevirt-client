/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { V1alpha1MigrationPolicySpec } from './V1alpha1MigrationPolicySpec.js';
import type { K8sIoApimachineryPkgApisMetaV1ObjectMeta } from './K8sIoApimachineryPkgApisMetaV1ObjectMeta.js';
/**
 * MigrationPolicy holds migration policy (i.e. configurations) to apply to a VM or group of VMs
 * @export
 * @interface V1alpha1MigrationPolicy
 */
export interface V1alpha1MigrationPolicy {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof V1alpha1MigrationPolicy
     */
    apiVersion?: string;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof V1alpha1MigrationPolicy
     */
    kind?: string;
    /**
     *
     * @type {K8sIoApimachineryPkgApisMetaV1ObjectMeta}
     * @memberof V1alpha1MigrationPolicy
     */
    metadata?: K8sIoApimachineryPkgApisMetaV1ObjectMeta;
    /**
     *
     * @type {V1alpha1MigrationPolicySpec}
     * @memberof V1alpha1MigrationPolicy
     */
    spec: V1alpha1MigrationPolicySpec;
    /**
     *
     * @type {object}
     * @memberof V1alpha1MigrationPolicy
     */
    status?: object;
}
/**
 * Check if a given object implements the V1alpha1MigrationPolicy interface.
 */
export declare function instanceOfV1alpha1MigrationPolicy(value: object): value is V1alpha1MigrationPolicy;
export declare function V1alpha1MigrationPolicyFromJSON(json: any): V1alpha1MigrationPolicy;
export declare function V1alpha1MigrationPolicyFromJSONTyped(json: any, _ignoreDiscriminator: boolean): V1alpha1MigrationPolicy;
export declare function V1alpha1MigrationPolicyToJSON(json: any): V1alpha1MigrationPolicy;
export declare function V1alpha1MigrationPolicyToJSONTyped(value?: V1alpha1MigrationPolicy | null, _ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=V1alpha1MigrationPolicy.d.ts.map