/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
* DataVolumeSourceHTTP can be either an http or https endpoint, with an optional basic auth user name and password, and an optional configmap containing additional CAs
*/
export class V1beta1DataVolumeSourceHTTP {
    /**
    * CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate
    */
    'certConfigMap';
    /**
    * ExtraHeaders is a list of strings containing extra headers to include with HTTP transfer requests
    */
    'extraHeaders';
    /**
    * SecretExtraHeaders is a list of Secret references, each containing an extra HTTP header that may include sensitive information
    */
    'secretExtraHeaders';
    /**
    * SecretRef A Secret reference, the secret should contain accessKeyId (user name) base64 encoded, and secretKey (password) also base64 encoded
    */
    'secretRef';
    /**
    * URL is the URL of the http(s) endpoint
    */
    'url';
    static discriminator = undefined;
    static mapping = undefined;
    static attributeTypeMap = [
        {
            "name": "certConfigMap",
            "baseName": "certConfigMap",
            "type": "string",
            "format": ""
        },
        {
            "name": "extraHeaders",
            "baseName": "extraHeaders",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "secretExtraHeaders",
            "baseName": "secretExtraHeaders",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "secretRef",
            "baseName": "secretRef",
            "type": "string",
            "format": ""
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string",
            "format": ""
        }
    ];
    static getAttributeTypeMap() {
        return V1beta1DataVolumeSourceHTTP.attributeTypeMap;
    }
    constructor() {
    }
}
//# sourceMappingURL=V1beta1DataVolumeSourceHTTP.js.map