/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { K8sIoApiCoreV1PersistentVolumeClaimSpecFromJSON, K8sIoApiCoreV1PersistentVolumeClaimSpecToJSON, } from './K8sIoApiCoreV1PersistentVolumeClaimSpec.js';
import { V1beta1DataVolumeSourceFromJSON, V1beta1DataVolumeSourceToJSON, } from './V1beta1DataVolumeSource.js';
import { V1beta1StorageSpecFromJSON, V1beta1StorageSpecToJSON, } from './V1beta1StorageSpec.js';
import { V1beta1DataVolumeSourceRefFromJSON, V1beta1DataVolumeSourceRefToJSON, } from './V1beta1DataVolumeSourceRef.js';
import { V1beta1DataVolumeCheckpointFromJSON, V1beta1DataVolumeCheckpointToJSON, } from './V1beta1DataVolumeCheckpoint.js';
/**
 * Check if a given object implements the V1beta1DataVolumeSpec interface.
 */
export function instanceOfV1beta1DataVolumeSpec(value) {
    return true;
}
export function V1beta1DataVolumeSpecFromJSON(json) {
    return V1beta1DataVolumeSpecFromJSONTyped(json, false);
}
export function V1beta1DataVolumeSpecFromJSONTyped(json, _ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'checkpoints': json['checkpoints'] == null ? undefined : (json['checkpoints'].map(V1beta1DataVolumeCheckpointFromJSON)),
        'contentType': json['contentType'] == null ? undefined : json['contentType'],
        'finalCheckpoint': json['finalCheckpoint'] == null ? undefined : json['finalCheckpoint'],
        'preallocation': json['preallocation'] == null ? undefined : json['preallocation'],
        'priorityClassName': json['priorityClassName'] == null ? undefined : json['priorityClassName'],
        'pvc': json['pvc'] == null ? undefined : K8sIoApiCoreV1PersistentVolumeClaimSpecFromJSON(json['pvc']),
        'source': json['source'] == null ? undefined : V1beta1DataVolumeSourceFromJSON(json['source']),
        'sourceRef': json['sourceRef'] == null ? undefined : V1beta1DataVolumeSourceRefFromJSON(json['sourceRef']),
        'storage': json['storage'] == null ? undefined : V1beta1StorageSpecFromJSON(json['storage']),
    };
}
export function V1beta1DataVolumeSpecToJSON(json) {
    return V1beta1DataVolumeSpecToJSONTyped(json, false);
}
export function V1beta1DataVolumeSpecToJSONTyped(value, _ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'checkpoints': value['checkpoints'] == null ? undefined : (value['checkpoints'].map(V1beta1DataVolumeCheckpointToJSON)),
        'contentType': value['contentType'],
        'finalCheckpoint': value['finalCheckpoint'],
        'preallocation': value['preallocation'],
        'priorityClassName': value['priorityClassName'],
        'pvc': K8sIoApiCoreV1PersistentVolumeClaimSpecToJSON(value['pvc']),
        'source': V1beta1DataVolumeSourceToJSON(value['source']),
        'sourceRef': V1beta1DataVolumeSourceRefToJSON(value['sourceRef']),
        'storage': V1beta1StorageSpecToJSON(value['storage']),
    };
}
//# sourceMappingURL=V1beta1DataVolumeSpec.js.map