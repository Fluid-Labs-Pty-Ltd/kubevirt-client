/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { V1VGPUOptions } from './V1VGPUOptions.js';
import type { V1BlockSize } from './V1BlockSize.js';
import type { V1TPMDevice } from './V1TPMDevice.js';
/**
 * DevicePreferences contains various optional Device preferences.
 * @export
 * @interface V1beta1DevicePreferences
 */
export interface V1beta1DevicePreferences {
    /**
     * PreferredAutoattachGraphicsDevice optionally defines the preferred value of AutoattachGraphicsDevice
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredAutoattachGraphicsDevice?: boolean;
    /**
     * PreferredAutoattachInputDevice optionally defines the preferred value of AutoattachInputDevice
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredAutoattachInputDevice?: boolean;
    /**
     * PreferredAutoattachMemBalloon optionally defines the preferred value of AutoattachMemBalloon
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredAutoattachMemBalloon?: boolean;
    /**
     * PreferredAutoattachPodInterface optionally defines the preferred value of AutoattachPodInterface
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredAutoattachPodInterface?: boolean;
    /**
     * PreferredAutoattachSerialConsole optionally defines the preferred value of AutoattachSerialConsole
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredAutoattachSerialConsole?: boolean;
    /**
     * PreferredBlockMultiQueue optionally enables the vhost multiqueue feature for virtio disks.
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredBlockMultiQueue?: boolean;
    /**
     * PreferredCdromBus optionally defines the preferred bus for Cdrom Disk devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredCdromBus?: string;
    /**
     * PreferredDisableHotplug optionally defines the preferred value of DisableHotplug
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredDisableHotplug?: boolean;
    /**
     *
     * @type {V1BlockSize}
     * @memberof V1beta1DevicePreferences
     */
    preferredDiskBlockSize?: V1BlockSize;
    /**
     * PreferredDiskBus optionally defines the preferred bus for Disk Disk devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredDiskBus?: string;
    /**
     * PreferredCache optionally defines the DriverCache to be used by Disk devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredDiskCache?: string;
    /**
     * PreferredDedicatedIoThread optionally enables dedicated IO threads for Disk devices using the virtio bus.
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredDiskDedicatedIoThread?: boolean;
    /**
     * PreferredIo optionally defines the QEMU disk IO mode to be used by Disk devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredDiskIO?: string;
    /**
     * PreferredInputBus optionally defines the preferred bus for Input devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredInputBus?: string;
    /**
     * PreferredInputType optionally defines the preferred type for Input devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredInputType?: string;
    /**
     * InterfaceMasquerade connects to a given network using netfilter rules to nat the traffic.
     * @type {object}
     * @memberof V1beta1DevicePreferences
     */
    preferredInterfaceMasquerade?: object;
    /**
     * PreferredInterfaceModel optionally defines the preferred model to be used by Interface devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredInterfaceModel?: string;
    /**
     * PreferredLunBus optionally defines the preferred bus for Lun Disk devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredLunBus?: string;
    /**
     * PreferredNetworkInterfaceMultiQueue optionally enables the vhost multiqueue feature for virtio interfaces.
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredNetworkInterfaceMultiQueue?: boolean;
    /**
     * Rng represents the random device passed from host
     * @type {object}
     * @memberof V1beta1DevicePreferences
     */
    preferredRng?: object;
    /**
     * PreferredSoundModel optionally defines the preferred model for Sound devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredSoundModel?: string;
    /**
     *
     * @type {V1TPMDevice}
     * @memberof V1beta1DevicePreferences
     */
    preferredTPM?: V1TPMDevice;
    /**
     * PreferredUseVirtioTransitional optionally defines the preferred value of UseVirtioTransitional
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredUseVirtioTransitional?: boolean;
    /**
     *
     * @type {V1VGPUOptions}
     * @memberof V1beta1DevicePreferences
     */
    preferredVirtualGPUOptions?: V1VGPUOptions;
}
/**
 * Check if a given object implements the V1beta1DevicePreferences interface.
 */
export declare function instanceOfV1beta1DevicePreferences(value: object): value is V1beta1DevicePreferences;
export declare function V1beta1DevicePreferencesFromJSON(json: any): V1beta1DevicePreferences;
export declare function V1beta1DevicePreferencesFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta1DevicePreferences;
export declare function V1beta1DevicePreferencesToJSON(json: any): V1beta1DevicePreferences;
export declare function V1beta1DevicePreferencesToJSONTyped(value?: V1beta1DevicePreferences | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=V1beta1DevicePreferences.d.ts.map