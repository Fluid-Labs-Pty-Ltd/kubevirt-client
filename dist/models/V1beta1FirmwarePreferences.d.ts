/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { V1EFI } from './V1EFI.js';
/**
 * FirmwarePreferences contains various optional defaults for Firmware.
 * @export
 * @interface V1beta1FirmwarePreferences
 */
export interface V1beta1FirmwarePreferences {
    /**
     *
     * @type {V1EFI}
     * @memberof V1beta1FirmwarePreferences
     */
    preferredEfi?: V1EFI;
    /**
     * PreferredUseBios optionally enables BIOS
     * @type {boolean}
     * @memberof V1beta1FirmwarePreferences
     */
    preferredUseBios?: boolean;
    /**
     * PreferredUseBiosSerial optionally transmitts BIOS output over the serial.
     *
     * Requires PreferredUseBios to be enabled.
     * @type {boolean}
     * @memberof V1beta1FirmwarePreferences
     */
    preferredUseBiosSerial?: boolean;
    /**
     * PreferredUseEfi optionally enables EFI
     * @type {boolean}
     * @memberof V1beta1FirmwarePreferences
     */
    preferredUseEfi?: boolean;
    /**
     * PreferredUseSecureBoot optionally enables SecureBoot and the OVMF roms will be swapped for SecureBoot-enabled ones.
     *
     * Requires PreferredUseEfi and PreferredSmm to be enabled.
     * @type {boolean}
     * @memberof V1beta1FirmwarePreferences
     */
    preferredUseSecureBoot?: boolean;
}
/**
 * Check if a given object implements the V1beta1FirmwarePreferences interface.
 */
export declare function instanceOfV1beta1FirmwarePreferences(value: object): value is V1beta1FirmwarePreferences;
export declare function V1beta1FirmwarePreferencesFromJSON(json: any): V1beta1FirmwarePreferences;
export declare function V1beta1FirmwarePreferencesFromJSONTyped(json: any, _ignoreDiscriminator: boolean): V1beta1FirmwarePreferences;
export declare function V1beta1FirmwarePreferencesToJSON(json: any): V1beta1FirmwarePreferences;
export declare function V1beta1FirmwarePreferencesToJSONTyped(value?: V1beta1FirmwarePreferences | null, _ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=V1beta1FirmwarePreferences.d.ts.map