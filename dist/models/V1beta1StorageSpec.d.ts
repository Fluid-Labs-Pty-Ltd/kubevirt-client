/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { K8sIoApiCoreV1ResourceRequirements } from './K8sIoApiCoreV1ResourceRequirements.js';
import type { K8sIoApiCoreV1TypedObjectReference } from './K8sIoApiCoreV1TypedObjectReference.js';
import type { K8sIoApiCoreV1TypedLocalObjectReference } from './K8sIoApiCoreV1TypedLocalObjectReference.js';
import type { K8sIoApimachineryPkgApisMetaV1LabelSelector } from './K8sIoApimachineryPkgApisMetaV1LabelSelector.js';
/**
 * StorageSpec defines the Storage type specification
 * @export
 * @interface V1beta1StorageSpec
 */
export interface V1beta1StorageSpec {
    /**
     * AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
     * @type {Array<string>}
     * @memberof V1beta1StorageSpec
     */
    accessModes?: Array<V1beta1StorageSpecAccessModesEnum>;
    /**
     *
     * @type {K8sIoApiCoreV1TypedLocalObjectReference}
     * @memberof V1beta1StorageSpec
     */
    dataSource?: K8sIoApiCoreV1TypedLocalObjectReference;
    /**
     *
     * @type {K8sIoApiCoreV1TypedObjectReference}
     * @memberof V1beta1StorageSpec
     */
    dataSourceRef?: K8sIoApiCoreV1TypedObjectReference;
    /**
     *
     * @type {K8sIoApiCoreV1ResourceRequirements}
     * @memberof V1beta1StorageSpec
     */
    resources?: K8sIoApiCoreV1ResourceRequirements;
    /**
     *
     * @type {K8sIoApimachineryPkgApisMetaV1LabelSelector}
     * @memberof V1beta1StorageSpec
     */
    selector?: K8sIoApimachineryPkgApisMetaV1LabelSelector;
    /**
     * Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
     * @type {string}
     * @memberof V1beta1StorageSpec
     */
    storageClassName?: string;
    /**
     * volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
     *
     * Possible enum values:
     *  - `"Block"` means the volume will not be formatted with a filesystem and will remain a raw block device.
     *  - `"Filesystem"` means the volume will be or is formatted with a filesystem.
     * @type {string}
     * @memberof V1beta1StorageSpec
     */
    volumeMode?: V1beta1StorageSpecVolumeModeEnum;
    /**
     * VolumeName is the binding reference to the PersistentVolume backing this claim.
     * @type {string}
     * @memberof V1beta1StorageSpec
     */
    volumeName?: string;
}
/**
 * @export
 */
export declare const V1beta1StorageSpecAccessModesEnum: {
    readonly ReadOnlyMany: "ReadOnlyMany";
    readonly ReadWriteMany: "ReadWriteMany";
    readonly ReadWriteOnce: "ReadWriteOnce";
    readonly ReadWriteOncePod: "ReadWriteOncePod";
};
export type V1beta1StorageSpecAccessModesEnum = typeof V1beta1StorageSpecAccessModesEnum[keyof typeof V1beta1StorageSpecAccessModesEnum];
/**
 * @export
 */
export declare const V1beta1StorageSpecVolumeModeEnum: {
    readonly Block: "Block";
    readonly Filesystem: "Filesystem";
};
export type V1beta1StorageSpecVolumeModeEnum = typeof V1beta1StorageSpecVolumeModeEnum[keyof typeof V1beta1StorageSpecVolumeModeEnum];
/**
 * Check if a given object implements the V1beta1StorageSpec interface.
 */
export declare function instanceOfV1beta1StorageSpec(value: object): value is V1beta1StorageSpec;
export declare function V1beta1StorageSpecFromJSON(json: any): V1beta1StorageSpec;
export declare function V1beta1StorageSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta1StorageSpec;
export declare function V1beta1StorageSpecToJSON(json: any): V1beta1StorageSpec;
export declare function V1beta1StorageSpecToJSONTyped(value?: V1beta1StorageSpec | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=V1beta1StorageSpec.d.ts.map