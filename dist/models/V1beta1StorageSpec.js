/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { K8sIoApiCoreV1ResourceRequirementsFromJSON, K8sIoApiCoreV1ResourceRequirementsToJSON, } from './K8sIoApiCoreV1ResourceRequirements.js';
import { K8sIoApiCoreV1TypedObjectReferenceFromJSON, K8sIoApiCoreV1TypedObjectReferenceToJSON, } from './K8sIoApiCoreV1TypedObjectReference.js';
import { K8sIoApiCoreV1TypedLocalObjectReferenceFromJSON, K8sIoApiCoreV1TypedLocalObjectReferenceToJSON, } from './K8sIoApiCoreV1TypedLocalObjectReference.js';
import { K8sIoApimachineryPkgApisMetaV1LabelSelectorFromJSON, K8sIoApimachineryPkgApisMetaV1LabelSelectorToJSON, } from './K8sIoApimachineryPkgApisMetaV1LabelSelector.js';
/**
 * @export
 */
export const V1beta1StorageSpecAccessModesEnum = {
    ReadOnlyMany: 'ReadOnlyMany',
    ReadWriteMany: 'ReadWriteMany',
    ReadWriteOnce: 'ReadWriteOnce',
    ReadWriteOncePod: 'ReadWriteOncePod'
};
/**
 * @export
 */
export const V1beta1StorageSpecVolumeModeEnum = {
    Block: 'Block',
    Filesystem: 'Filesystem'
};
/**
 * Check if a given object implements the V1beta1StorageSpec interface.
 */
export function instanceOfV1beta1StorageSpec(value) {
    return true;
}
export function V1beta1StorageSpecFromJSON(json) {
    return V1beta1StorageSpecFromJSONTyped(json, false);
}
export function V1beta1StorageSpecFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'accessModes': json['accessModes'] == null ? undefined : json['accessModes'],
        'dataSource': json['dataSource'] == null ? undefined : K8sIoApiCoreV1TypedLocalObjectReferenceFromJSON(json['dataSource']),
        'dataSourceRef': json['dataSourceRef'] == null ? undefined : K8sIoApiCoreV1TypedObjectReferenceFromJSON(json['dataSourceRef']),
        'resources': json['resources'] == null ? undefined : K8sIoApiCoreV1ResourceRequirementsFromJSON(json['resources']),
        'selector': json['selector'] == null ? undefined : K8sIoApimachineryPkgApisMetaV1LabelSelectorFromJSON(json['selector']),
        'storageClassName': json['storageClassName'] == null ? undefined : json['storageClassName'],
        'volumeMode': json['volumeMode'] == null ? undefined : json['volumeMode'],
        'volumeName': json['volumeName'] == null ? undefined : json['volumeName'],
    };
}
export function V1beta1StorageSpecToJSON(json) {
    return V1beta1StorageSpecToJSONTyped(json, false);
}
export function V1beta1StorageSpecToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'accessModes': value['accessModes'],
        'dataSource': K8sIoApiCoreV1TypedLocalObjectReferenceToJSON(value['dataSource']),
        'dataSourceRef': K8sIoApiCoreV1TypedObjectReferenceToJSON(value['dataSourceRef']),
        'resources': K8sIoApiCoreV1ResourceRequirementsToJSON(value['resources']),
        'selector': K8sIoApimachineryPkgApisMetaV1LabelSelectorToJSON(value['selector']),
        'storageClassName': value['storageClassName'],
        'volumeMode': value['volumeMode'],
        'volumeName': value['volumeName'],
    };
}
//# sourceMappingURL=V1beta1StorageSpec.js.map