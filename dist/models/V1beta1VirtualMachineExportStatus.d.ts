/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { V1beta1VirtualMachineExportLinks } from './V1beta1VirtualMachineExportLinks.js';
import type { V1beta1Condition } from './V1beta1Condition.js';
/**
 * VirtualMachineExportStatus is the status for a VirtualMachineExport resource
 * @export
 * @interface V1beta1VirtualMachineExportStatus
 */
export interface V1beta1VirtualMachineExportStatus {
    /**
     *
     * @type {Array<V1beta1Condition>}
     * @memberof V1beta1VirtualMachineExportStatus
     */
    conditions?: Array<V1beta1Condition>;
    /**
     *
     * @type {V1beta1VirtualMachineExportLinks}
     * @memberof V1beta1VirtualMachineExportStatus
     */
    links?: V1beta1VirtualMachineExportLinks;
    /**
     *
     * @type {string}
     * @memberof V1beta1VirtualMachineExportStatus
     */
    phase?: string;
    /**
     * ServiceName is the name of the service created associated with the Virtual Machine export. It will be used to create the internal URLs for downloading the images
     * @type {string}
     * @memberof V1beta1VirtualMachineExportStatus
     */
    serviceName?: string;
    /**
     * TokenSecretRef is the name of the secret that contains the token used by the export server pod
     * @type {string}
     * @memberof V1beta1VirtualMachineExportStatus
     */
    tokenSecretRef?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {string}
     * @memberof V1beta1VirtualMachineExportStatus
     */
    ttlExpirationTime?: string;
    /**
     * VirtualMachineName shows the name of the source virtual machine if the source is either a VirtualMachine or a VirtualMachineSnapshot. This is mainly to easily identify the source VirtualMachine in case of a VirtualMachineSnapshot
     * @type {string}
     * @memberof V1beta1VirtualMachineExportStatus
     */
    virtualMachineName?: string;
}
/**
 * Check if a given object implements the V1beta1VirtualMachineExportStatus interface.
 */
export declare function instanceOfV1beta1VirtualMachineExportStatus(value: object): value is V1beta1VirtualMachineExportStatus;
export declare function V1beta1VirtualMachineExportStatusFromJSON(json: any): V1beta1VirtualMachineExportStatus;
export declare function V1beta1VirtualMachineExportStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta1VirtualMachineExportStatus;
export declare function V1beta1VirtualMachineExportStatusToJSON(json: any): V1beta1VirtualMachineExportStatus;
export declare function V1beta1VirtualMachineExportStatusToJSONTyped(value?: V1beta1VirtualMachineExportStatus | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=V1beta1VirtualMachineExportStatus.d.ts.map