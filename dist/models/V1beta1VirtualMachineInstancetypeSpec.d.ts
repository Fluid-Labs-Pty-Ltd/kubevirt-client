/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1GPU } from '../models/V1GPU.js';
import { V1HostDevice } from '../models/V1HostDevice.js';
import { V1LaunchSecurity } from '../models/V1LaunchSecurity.js';
import { V1beta1CPUInstancetype } from '../models/V1beta1CPUInstancetype.js';
import { V1beta1MemoryInstancetype } from '../models/V1beta1MemoryInstancetype.js';
/**
* VirtualMachineInstancetypeSpec is a description of the VirtualMachineInstancetype or VirtualMachineClusterInstancetype.  CPU and Memory are required attributes with both requiring that their Guest attribute is defined, ensuring a number of vCPUs and amount of RAM is always provided by each instancetype.
*/
export declare class V1beta1VirtualMachineInstancetypeSpec {
    /**
    * Optionally defines the required Annotations to be used by the instance type and applied to the VirtualMachineInstance
    */
    'annotations'?: {
        [key: string]: string;
    };
    'cpu': V1beta1CPUInstancetype;
    /**
    * Optionally defines any GPU devices associated with the instancetype.
    */
    'gpus'?: Array<V1GPU>;
    /**
    * Optionally defines any HostDevices associated with the instancetype.
    */
    'hostDevices'?: Array<V1HostDevice>;
    /**
    * Optionally defines the IOThreadsPolicy to be used by the instancetype.
    */
    'ioThreadsPolicy'?: string;
    'launchSecurity'?: V1LaunchSecurity;
    'memory': V1beta1MemoryInstancetype;
    /**
    * NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node\'s labels for the vmi to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/  NodeSelector is the name of the custom node selector for the instancetype.
    */
    'nodeSelector'?: {
        [key: string]: string;
    };
    /**
    * If specified, the VMI will be dispatched by specified scheduler. If not specified, the VMI will be dispatched by default scheduler.  SchedulerName is the name of the custom K8s scheduler for the instancetype.
    */
    'schedulerName'?: string;
    static readonly discriminator: string | undefined;
    static readonly mapping: {
        [index: string]: string;
    } | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
//# sourceMappingURL=V1beta1VirtualMachineInstancetypeSpec.d.ts.map