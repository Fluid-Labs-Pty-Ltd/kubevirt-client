/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { V1GPU } from './V1GPU.js';
import type { V1beta1CPUInstancetype } from './V1beta1CPUInstancetype.js';
import type { V1HostDevice } from './V1HostDevice.js';
import type { V1LaunchSecurity } from './V1LaunchSecurity.js';
import type { V1beta1MemoryInstancetype } from './V1beta1MemoryInstancetype.js';
/**
 * VirtualMachineInstancetypeSpec is a description of the VirtualMachineInstancetype or VirtualMachineClusterInstancetype.
 *
 * CPU and Memory are required attributes with both requiring that their Guest attribute is defined, ensuring a number of vCPUs and amount of RAM is always provided by each instancetype.
 * @export
 * @interface V1beta1VirtualMachineInstancetypeSpec
 */
export interface V1beta1VirtualMachineInstancetypeSpec {
    /**
     * Optionally defines the required Annotations to be used by the instance type and applied to the VirtualMachineInstance
     * @type {{ [key: string]: string; }}
     * @memberof V1beta1VirtualMachineInstancetypeSpec
     */
    annotations?: {
        [key: string]: string;
    };
    /**
     *
     * @type {V1beta1CPUInstancetype}
     * @memberof V1beta1VirtualMachineInstancetypeSpec
     */
    cpu: V1beta1CPUInstancetype;
    /**
     * Optionally defines any GPU devices associated with the instancetype.
     * @type {Array<V1GPU>}
     * @memberof V1beta1VirtualMachineInstancetypeSpec
     */
    gpus?: Array<V1GPU>;
    /**
     * Optionally defines any HostDevices associated with the instancetype.
     * @type {Array<V1HostDevice>}
     * @memberof V1beta1VirtualMachineInstancetypeSpec
     */
    hostDevices?: Array<V1HostDevice>;
    /**
     * Optionally defines the IOThreadsPolicy to be used by the instancetype.
     * @type {string}
     * @memberof V1beta1VirtualMachineInstancetypeSpec
     */
    ioThreadsPolicy?: string;
    /**
     *
     * @type {V1LaunchSecurity}
     * @memberof V1beta1VirtualMachineInstancetypeSpec
     */
    launchSecurity?: V1LaunchSecurity;
    /**
     *
     * @type {V1beta1MemoryInstancetype}
     * @memberof V1beta1VirtualMachineInstancetypeSpec
     */
    memory: V1beta1MemoryInstancetype;
    /**
     * NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node's labels for the vmi to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
     *
     * NodeSelector is the name of the custom node selector for the instancetype.
     * @type {{ [key: string]: string; }}
     * @memberof V1beta1VirtualMachineInstancetypeSpec
     */
    nodeSelector?: {
        [key: string]: string;
    };
    /**
     * If specified, the VMI will be dispatched by specified scheduler. If not specified, the VMI will be dispatched by default scheduler.
     *
     * SchedulerName is the name of the custom K8s scheduler for the instancetype.
     * @type {string}
     * @memberof V1beta1VirtualMachineInstancetypeSpec
     */
    schedulerName?: string;
}
/**
 * Check if a given object implements the V1beta1VirtualMachineInstancetypeSpec interface.
 */
export declare function instanceOfV1beta1VirtualMachineInstancetypeSpec(value: object): value is V1beta1VirtualMachineInstancetypeSpec;
export declare function V1beta1VirtualMachineInstancetypeSpecFromJSON(json: any): V1beta1VirtualMachineInstancetypeSpec;
export declare function V1beta1VirtualMachineInstancetypeSpecFromJSONTyped(json: any, _ignoreDiscriminator: boolean): V1beta1VirtualMachineInstancetypeSpec;
export declare function V1beta1VirtualMachineInstancetypeSpecToJSON(json: any): V1beta1VirtualMachineInstancetypeSpec;
export declare function V1beta1VirtualMachineInstancetypeSpecToJSONTyped(value?: V1beta1VirtualMachineInstancetypeSpec | null, _ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=V1beta1VirtualMachineInstancetypeSpec.d.ts.map