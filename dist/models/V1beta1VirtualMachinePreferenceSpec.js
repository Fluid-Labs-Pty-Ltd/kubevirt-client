/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { V1beta1ClockPreferencesFromJSON, V1beta1ClockPreferencesToJSON, } from './V1beta1ClockPreferences.js';
import { V1beta1FeaturePreferencesFromJSON, V1beta1FeaturePreferencesToJSON, } from './V1beta1FeaturePreferences.js';
import { V1beta1PreferenceRequirementsFromJSON, V1beta1PreferenceRequirementsToJSON, } from './V1beta1PreferenceRequirements.js';
import { V1beta1DevicePreferencesFromJSON, V1beta1DevicePreferencesToJSON, } from './V1beta1DevicePreferences.js';
import { V1beta1CPUPreferencesFromJSON, V1beta1CPUPreferencesToJSON, } from './V1beta1CPUPreferences.js';
import { V1beta1VolumePreferencesFromJSON, V1beta1VolumePreferencesToJSON, } from './V1beta1VolumePreferences.js';
import { V1beta1MachinePreferencesFromJSON, V1beta1MachinePreferencesToJSON, } from './V1beta1MachinePreferences.js';
import { V1beta1FirmwarePreferencesFromJSON, V1beta1FirmwarePreferencesToJSON, } from './V1beta1FirmwarePreferences.js';
/**
 * Check if a given object implements the V1beta1VirtualMachinePreferenceSpec interface.
 */
export function instanceOfV1beta1VirtualMachinePreferenceSpec(value) {
    return true;
}
export function V1beta1VirtualMachinePreferenceSpecFromJSON(json) {
    return V1beta1VirtualMachinePreferenceSpecFromJSONTyped(json, false);
}
export function V1beta1VirtualMachinePreferenceSpecFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'annotations': json['annotations'] == null ? undefined : json['annotations'],
        'clock': json['clock'] == null ? undefined : V1beta1ClockPreferencesFromJSON(json['clock']),
        'cpu': json['cpu'] == null ? undefined : V1beta1CPUPreferencesFromJSON(json['cpu']),
        'devices': json['devices'] == null ? undefined : V1beta1DevicePreferencesFromJSON(json['devices']),
        'features': json['features'] == null ? undefined : V1beta1FeaturePreferencesFromJSON(json['features']),
        'firmware': json['firmware'] == null ? undefined : V1beta1FirmwarePreferencesFromJSON(json['firmware']),
        'machine': json['machine'] == null ? undefined : V1beta1MachinePreferencesFromJSON(json['machine']),
        'preferSpreadSocketToCoreRatio': json['preferSpreadSocketToCoreRatio'] == null ? undefined : json['preferSpreadSocketToCoreRatio'],
        'preferredSubdomain': json['preferredSubdomain'] == null ? undefined : json['preferredSubdomain'],
        'preferredTerminationGracePeriodSeconds': json['preferredTerminationGracePeriodSeconds'] == null ? undefined : json['preferredTerminationGracePeriodSeconds'],
        'requirements': json['requirements'] == null ? undefined : V1beta1PreferenceRequirementsFromJSON(json['requirements']),
        'volumes': json['volumes'] == null ? undefined : V1beta1VolumePreferencesFromJSON(json['volumes']),
    };
}
export function V1beta1VirtualMachinePreferenceSpecToJSON(json) {
    return V1beta1VirtualMachinePreferenceSpecToJSONTyped(json, false);
}
export function V1beta1VirtualMachinePreferenceSpecToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'annotations': value['annotations'],
        'clock': V1beta1ClockPreferencesToJSON(value['clock']),
        'cpu': V1beta1CPUPreferencesToJSON(value['cpu']),
        'devices': V1beta1DevicePreferencesToJSON(value['devices']),
        'features': V1beta1FeaturePreferencesToJSON(value['features']),
        'firmware': V1beta1FirmwarePreferencesToJSON(value['firmware']),
        'machine': V1beta1MachinePreferencesToJSON(value['machine']),
        'preferSpreadSocketToCoreRatio': value['preferSpreadSocketToCoreRatio'],
        'preferredSubdomain': value['preferredSubdomain'],
        'preferredTerminationGracePeriodSeconds': value['preferredTerminationGracePeriodSeconds'],
        'requirements': V1beta1PreferenceRequirementsToJSON(value['requirements']),
        'volumes': V1beta1VolumePreferencesToJSON(value['volumes']),
    };
}
//# sourceMappingURL=V1beta1VirtualMachinePreferenceSpec.js.map