/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 * @export
 * @interface K8sIoApiCoreV1HTTPHeader
 */
export interface K8sIoApiCoreV1HTTPHeader {
    /**
     * The header field name. This will be canonicalized upon output, so case-variant names will be understood as the same header.
     * @type {string}
     * @memberof K8sIoApiCoreV1HTTPHeader
     */
    name: string;
    /**
     * The header field value
     * @type {string}
     * @memberof K8sIoApiCoreV1HTTPHeader
     */
    value: string;
}

/**
 * Check if a given object implements the K8sIoApiCoreV1HTTPHeader interface.
 */
export function instanceOfK8sIoApiCoreV1HTTPHeader(value: object): value is K8sIoApiCoreV1HTTPHeader {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function K8sIoApiCoreV1HTTPHeaderFromJSON(json: any): K8sIoApiCoreV1HTTPHeader {
    return K8sIoApiCoreV1HTTPHeaderFromJSONTyped(json, false);
}

export function K8sIoApiCoreV1HTTPHeaderFromJSONTyped(json: any, ignoreDiscriminator: boolean): K8sIoApiCoreV1HTTPHeader {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'value': json['value'],
    };
}

export function K8sIoApiCoreV1HTTPHeaderToJSON(json: any): K8sIoApiCoreV1HTTPHeader {
    return K8sIoApiCoreV1HTTPHeaderToJSONTyped(json, false);
}

export function K8sIoApiCoreV1HTTPHeaderToJSONTyped(value?: K8sIoApiCoreV1HTTPHeader | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'value': value['value'],
    };
}

