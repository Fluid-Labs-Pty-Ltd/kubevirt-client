/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { K8sIoApiCoreV1VolumeResourceRequirements } from './K8sIoApiCoreV1VolumeResourceRequirements';
import {
    K8sIoApiCoreV1VolumeResourceRequirementsFromJSON,
    K8sIoApiCoreV1VolumeResourceRequirementsFromJSONTyped,
    K8sIoApiCoreV1VolumeResourceRequirementsToJSON,
    K8sIoApiCoreV1VolumeResourceRequirementsToJSONTyped,
} from './K8sIoApiCoreV1VolumeResourceRequirements';
import type { K8sIoApiCoreV1TypedObjectReference } from './K8sIoApiCoreV1TypedObjectReference';
import {
    K8sIoApiCoreV1TypedObjectReferenceFromJSON,
    K8sIoApiCoreV1TypedObjectReferenceFromJSONTyped,
    K8sIoApiCoreV1TypedObjectReferenceToJSON,
    K8sIoApiCoreV1TypedObjectReferenceToJSONTyped,
} from './K8sIoApiCoreV1TypedObjectReference';
import type { K8sIoApiCoreV1TypedLocalObjectReference } from './K8sIoApiCoreV1TypedLocalObjectReference';
import {
    K8sIoApiCoreV1TypedLocalObjectReferenceFromJSON,
    K8sIoApiCoreV1TypedLocalObjectReferenceFromJSONTyped,
    K8sIoApiCoreV1TypedLocalObjectReferenceToJSON,
    K8sIoApiCoreV1TypedLocalObjectReferenceToJSONTyped,
} from './K8sIoApiCoreV1TypedLocalObjectReference';
import type { K8sIoApimachineryPkgApisMetaV1LabelSelector } from './K8sIoApimachineryPkgApisMetaV1LabelSelector';
import {
    K8sIoApimachineryPkgApisMetaV1LabelSelectorFromJSON,
    K8sIoApimachineryPkgApisMetaV1LabelSelectorFromJSONTyped,
    K8sIoApimachineryPkgApisMetaV1LabelSelectorToJSON,
    K8sIoApimachineryPkgApisMetaV1LabelSelectorToJSONTyped,
} from './K8sIoApimachineryPkgApisMetaV1LabelSelector';

/**
 * PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes
 * @export
 * @interface K8sIoApiCoreV1PersistentVolumeClaimSpec
 */
export interface K8sIoApiCoreV1PersistentVolumeClaimSpec {
    /**
     * accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
     * @type {Array<string>}
     * @memberof K8sIoApiCoreV1PersistentVolumeClaimSpec
     */
    accessModes?: Array<K8sIoApiCoreV1PersistentVolumeClaimSpecAccessModesEnum>;
    /**
     * 
     * @type {K8sIoApiCoreV1TypedLocalObjectReference}
     * @memberof K8sIoApiCoreV1PersistentVolumeClaimSpec
     */
    dataSource?: K8sIoApiCoreV1TypedLocalObjectReference;
    /**
     * 
     * @type {K8sIoApiCoreV1TypedObjectReference}
     * @memberof K8sIoApiCoreV1PersistentVolumeClaimSpec
     */
    dataSourceRef?: K8sIoApiCoreV1TypedObjectReference;
    /**
     * 
     * @type {K8sIoApiCoreV1VolumeResourceRequirements}
     * @memberof K8sIoApiCoreV1PersistentVolumeClaimSpec
     */
    resources?: K8sIoApiCoreV1VolumeResourceRequirements;
    /**
     * 
     * @type {K8sIoApimachineryPkgApisMetaV1LabelSelector}
     * @memberof K8sIoApiCoreV1PersistentVolumeClaimSpec
     */
    selector?: K8sIoApimachineryPkgApisMetaV1LabelSelector;
    /**
     * storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
     * @type {string}
     * @memberof K8sIoApiCoreV1PersistentVolumeClaimSpec
     */
    storageClassName?: string;
    /**
     * volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim. If specified, the CSI driver will create or update the volume with the attributes defined in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName, it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass will be applied to the claim but it's not allowed to reset this field to empty string once it is set. If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass will be set by the persistentvolume controller if it exists. If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/ (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
     * @type {string}
     * @memberof K8sIoApiCoreV1PersistentVolumeClaimSpec
     */
    volumeAttributesClassName?: string;
    /**
     * volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
     * 
     * Possible enum values:
     *  - `"Block"` means the volume will not be formatted with a filesystem and will remain a raw block device.
     *  - `"Filesystem"` means the volume will be or is formatted with a filesystem.
     * @type {string}
     * @memberof K8sIoApiCoreV1PersistentVolumeClaimSpec
     */
    volumeMode?: K8sIoApiCoreV1PersistentVolumeClaimSpecVolumeModeEnum;
    /**
     * volumeName is the binding reference to the PersistentVolume backing this claim.
     * @type {string}
     * @memberof K8sIoApiCoreV1PersistentVolumeClaimSpec
     */
    volumeName?: string;
}


/**
 * @export
 */
export const K8sIoApiCoreV1PersistentVolumeClaimSpecAccessModesEnum = {
    ReadOnlyMany: 'ReadOnlyMany',
    ReadWriteMany: 'ReadWriteMany',
    ReadWriteOnce: 'ReadWriteOnce',
    ReadWriteOncePod: 'ReadWriteOncePod'
} as const;
export type K8sIoApiCoreV1PersistentVolumeClaimSpecAccessModesEnum = typeof K8sIoApiCoreV1PersistentVolumeClaimSpecAccessModesEnum[keyof typeof K8sIoApiCoreV1PersistentVolumeClaimSpecAccessModesEnum];

/**
 * @export
 */
export const K8sIoApiCoreV1PersistentVolumeClaimSpecVolumeModeEnum = {
    Block: 'Block',
    Filesystem: 'Filesystem'
} as const;
export type K8sIoApiCoreV1PersistentVolumeClaimSpecVolumeModeEnum = typeof K8sIoApiCoreV1PersistentVolumeClaimSpecVolumeModeEnum[keyof typeof K8sIoApiCoreV1PersistentVolumeClaimSpecVolumeModeEnum];


/**
 * Check if a given object implements the K8sIoApiCoreV1PersistentVolumeClaimSpec interface.
 */
export function instanceOfK8sIoApiCoreV1PersistentVolumeClaimSpec(value: object): value is K8sIoApiCoreV1PersistentVolumeClaimSpec {
    return true;
}

export function K8sIoApiCoreV1PersistentVolumeClaimSpecFromJSON(json: any): K8sIoApiCoreV1PersistentVolumeClaimSpec {
    return K8sIoApiCoreV1PersistentVolumeClaimSpecFromJSONTyped(json, false);
}

export function K8sIoApiCoreV1PersistentVolumeClaimSpecFromJSONTyped(json: any, _ignoreDiscriminator: boolean): K8sIoApiCoreV1PersistentVolumeClaimSpec {
    if (json == null) {
        return json;
    }
    return {
        
        'accessModes': json['accessModes'] == null ? undefined : json['accessModes'],
        'dataSource': json['dataSource'] == null ? undefined : K8sIoApiCoreV1TypedLocalObjectReferenceFromJSON(json['dataSource']),
        'dataSourceRef': json['dataSourceRef'] == null ? undefined : K8sIoApiCoreV1TypedObjectReferenceFromJSON(json['dataSourceRef']),
        'resources': json['resources'] == null ? undefined : K8sIoApiCoreV1VolumeResourceRequirementsFromJSON(json['resources']),
        'selector': json['selector'] == null ? undefined : K8sIoApimachineryPkgApisMetaV1LabelSelectorFromJSON(json['selector']),
        'storageClassName': json['storageClassName'] == null ? undefined : json['storageClassName'],
        'volumeAttributesClassName': json['volumeAttributesClassName'] == null ? undefined : json['volumeAttributesClassName'],
        'volumeMode': json['volumeMode'] == null ? undefined : json['volumeMode'],
        'volumeName': json['volumeName'] == null ? undefined : json['volumeName'],
    };
}

export function K8sIoApiCoreV1PersistentVolumeClaimSpecToJSON(json: any): K8sIoApiCoreV1PersistentVolumeClaimSpec {
    return K8sIoApiCoreV1PersistentVolumeClaimSpecToJSONTyped(json, false);
}

export function K8sIoApiCoreV1PersistentVolumeClaimSpecToJSONTyped(value?: K8sIoApiCoreV1PersistentVolumeClaimSpec | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'accessModes': value['accessModes'],
        'dataSource': K8sIoApiCoreV1TypedLocalObjectReferenceToJSON(value['dataSource']),
        'dataSourceRef': K8sIoApiCoreV1TypedObjectReferenceToJSON(value['dataSourceRef']),
        'resources': K8sIoApiCoreV1VolumeResourceRequirementsToJSON(value['resources']),
        'selector': K8sIoApimachineryPkgApisMetaV1LabelSelectorToJSON(value['selector']),
        'storageClassName': value['storageClassName'],
        'volumeAttributesClassName': value['volumeAttributesClassName'],
        'volumeMode': value['volumeMode'],
        'volumeName': value['volumeName'],
    };
}

