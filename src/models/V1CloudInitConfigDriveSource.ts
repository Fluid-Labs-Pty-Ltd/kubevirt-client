/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { K8sIoApiCoreV1LocalObjectReference } from './K8sIoApiCoreV1LocalObjectReference';
import {
    K8sIoApiCoreV1LocalObjectReferenceFromJSON,
    K8sIoApiCoreV1LocalObjectReferenceFromJSONTyped,
    K8sIoApiCoreV1LocalObjectReferenceToJSON,
    K8sIoApiCoreV1LocalObjectReferenceToJSONTyped,
} from './K8sIoApiCoreV1LocalObjectReference';

/**
 * Represents a cloud-init config drive user data source. More info: https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html
 * @export
 * @interface V1CloudInitConfigDriveSource
 */
export interface V1CloudInitConfigDriveSource {
    /**
     * NetworkData contains config drive inline cloud-init networkdata.
     * @type {string}
     * @memberof V1CloudInitConfigDriveSource
     */
    networkData?: string;
    /**
     * NetworkDataBase64 contains config drive cloud-init networkdata as a base64 encoded string.
     * @type {string}
     * @memberof V1CloudInitConfigDriveSource
     */
    networkDataBase64?: string;
    /**
     * 
     * @type {K8sIoApiCoreV1LocalObjectReference}
     * @memberof V1CloudInitConfigDriveSource
     */
    networkDataSecretRef?: K8sIoApiCoreV1LocalObjectReference;
    /**
     * 
     * @type {K8sIoApiCoreV1LocalObjectReference}
     * @memberof V1CloudInitConfigDriveSource
     */
    secretRef?: K8sIoApiCoreV1LocalObjectReference;
    /**
     * UserData contains config drive inline cloud-init userdata.
     * @type {string}
     * @memberof V1CloudInitConfigDriveSource
     */
    userData?: string;
    /**
     * UserDataBase64 contains config drive cloud-init userdata as a base64 encoded string.
     * @type {string}
     * @memberof V1CloudInitConfigDriveSource
     */
    userDataBase64?: string;
}

/**
 * Check if a given object implements the V1CloudInitConfigDriveSource interface.
 */
export function instanceOfV1CloudInitConfigDriveSource(value: object): value is V1CloudInitConfigDriveSource {
    return true;
}

export function V1CloudInitConfigDriveSourceFromJSON(json: any): V1CloudInitConfigDriveSource {
    return V1CloudInitConfigDriveSourceFromJSONTyped(json, false);
}

export function V1CloudInitConfigDriveSourceFromJSONTyped(json: any, _ignoreDiscriminator: boolean): V1CloudInitConfigDriveSource {
    if (json == null) {
        return json;
    }
    return {
        
        'networkData': json['networkData'] == null ? undefined : json['networkData'],
        'networkDataBase64': json['networkDataBase64'] == null ? undefined : json['networkDataBase64'],
        'networkDataSecretRef': json['networkDataSecretRef'] == null ? undefined : K8sIoApiCoreV1LocalObjectReferenceFromJSON(json['networkDataSecretRef']),
        'secretRef': json['secretRef'] == null ? undefined : K8sIoApiCoreV1LocalObjectReferenceFromJSON(json['secretRef']),
        'userData': json['userData'] == null ? undefined : json['userData'],
        'userDataBase64': json['userDataBase64'] == null ? undefined : json['userDataBase64'],
    };
}

export function V1CloudInitConfigDriveSourceToJSON(json: any): V1CloudInitConfigDriveSource {
    return V1CloudInitConfigDriveSourceToJSONTyped(json, false);
}

export function V1CloudInitConfigDriveSourceToJSONTyped(value?: V1CloudInitConfigDriveSource | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'networkData': value['networkData'],
        'networkDataBase64': value['networkDataBase64'],
        'networkDataSecretRef': K8sIoApiCoreV1LocalObjectReferenceToJSON(value['networkDataSecretRef']),
        'secretRef': K8sIoApiCoreV1LocalObjectReferenceToJSON(value['secretRef']),
        'userData': value['userData'],
        'userDataBase64': value['userDataBase64'],
    };
}

