/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { V1NodePlacement } from './V1NodePlacement.js';
import {
    V1NodePlacementFromJSON,
    V1NodePlacementFromJSONTyped,
    V1NodePlacementToJSON,
    V1NodePlacementToJSONTyped,
} from './V1NodePlacement.js';

/**
 * 
 * @export
 * @interface V1ComponentConfig
 */
export interface V1ComponentConfig {
    /**
     * 
     * @type {V1NodePlacement}
     * @memberof V1ComponentConfig
     */
    nodePlacement?: V1NodePlacement;
    /**
     * replicas indicates how many replicas should be created for each KubeVirt infrastructure component (like virt-api or virt-controller). Defaults to 2. WARNING: this is an advanced feature that prevents auto-scaling for core kubevirt components. Please use with caution!
     * @type {number}
     * @memberof V1ComponentConfig
     */
    replicas?: number;
}

/**
 * Check if a given object implements the V1ComponentConfig interface.
 */
export function instanceOfV1ComponentConfig(value: object): value is V1ComponentConfig {
    return true;
}

export function V1ComponentConfigFromJSON(json: any): V1ComponentConfig {
    return V1ComponentConfigFromJSONTyped(json, false);
}

export function V1ComponentConfigFromJSONTyped(json: any, _ignoreDiscriminator: boolean): V1ComponentConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'nodePlacement': json['nodePlacement'] == null ? undefined : V1NodePlacementFromJSON(json['nodePlacement']),
        'replicas': json['replicas'] == null ? undefined : json['replicas'],
    };
}

export function V1ComponentConfigToJSON(json: any): V1ComponentConfig {
    return V1ComponentConfigToJSONTyped(json, false);
}

export function V1ComponentConfigToJSONTyped(value?: V1ComponentConfig | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'nodePlacement': V1NodePlacementToJSON(value['nodePlacement']),
        'replicas': value['replicas'],
    };
}

