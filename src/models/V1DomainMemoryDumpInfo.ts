/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * DomainMemoryDumpInfo represents the memory dump information
 * @export
 * @interface V1DomainMemoryDumpInfo
 */
export interface V1DomainMemoryDumpInfo {
    /**
     * ClaimName is the name of the pvc the memory was dumped to
     * @type {string}
     * @memberof V1DomainMemoryDumpInfo
     */
    claimName?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {string}
     * @memberof V1DomainMemoryDumpInfo
     */
    endTimestamp?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {string}
     * @memberof V1DomainMemoryDumpInfo
     */
    startTimestamp?: string;
    /**
     * TargetFileName is the name of the memory dump output
     * @type {string}
     * @memberof V1DomainMemoryDumpInfo
     */
    targetFileName?: string;
}

/**
 * Check if a given object implements the V1DomainMemoryDumpInfo interface.
 */
export function instanceOfV1DomainMemoryDumpInfo(value: object): value is V1DomainMemoryDumpInfo {
    return true;
}

export function V1DomainMemoryDumpInfoFromJSON(json: any): V1DomainMemoryDumpInfo {
    return V1DomainMemoryDumpInfoFromJSONTyped(json, false);
}

export function V1DomainMemoryDumpInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1DomainMemoryDumpInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'claimName': json['claimName'] == null ? undefined : json['claimName'],
        'endTimestamp': json['endTimestamp'] == null ? undefined : json['endTimestamp'],
        'startTimestamp': json['startTimestamp'] == null ? undefined : json['startTimestamp'],
        'targetFileName': json['targetFileName'] == null ? undefined : json['targetFileName'],
    };
}

export function V1DomainMemoryDumpInfoToJSON(json: any): V1DomainMemoryDumpInfo {
    return V1DomainMemoryDumpInfoToJSONTyped(json, false);
}

export function V1DomainMemoryDumpInfoToJSONTyped(value?: V1DomainMemoryDumpInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'claimName': value['claimName'],
        'endTimestamp': value['endTimestamp'],
        'startTimestamp': value['startTimestamp'],
        'targetFileName': value['targetFileName'],
    };
}

