/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { V1HyperVPassthrough } from './V1HyperVPassthrough.js';
import {
    V1HyperVPassthroughFromJSON,
    V1HyperVPassthroughFromJSONTyped,
    V1HyperVPassthroughToJSON,
    V1HyperVPassthroughToJSONTyped,
} from './V1HyperVPassthrough.js';
import type { V1FeatureAPIC } from './V1FeatureAPIC.js';
import {
    V1FeatureAPICFromJSON,
    V1FeatureAPICFromJSONTyped,
    V1FeatureAPICToJSON,
    V1FeatureAPICToJSONTyped,
} from './V1FeatureAPIC.js';
import type { V1FeatureHyperv } from './V1FeatureHyperv.js';
import {
    V1FeatureHypervFromJSON,
    V1FeatureHypervFromJSONTyped,
    V1FeatureHypervToJSON,
    V1FeatureHypervToJSONTyped,
} from './V1FeatureHyperv.js';
import type { V1FeatureState } from './V1FeatureState.js';
import {
    V1FeatureStateFromJSON,
    V1FeatureStateFromJSONTyped,
    V1FeatureStateToJSON,
    V1FeatureStateToJSONTyped,
} from './V1FeatureState.js';
import type { V1FeatureKVM } from './V1FeatureKVM.js';
import {
    V1FeatureKVMFromJSON,
    V1FeatureKVMFromJSONTyped,
    V1FeatureKVMToJSON,
    V1FeatureKVMToJSONTyped,
} from './V1FeatureKVM.js';

/**
 * 
 * @export
 * @interface V1Features
 */
export interface V1Features {
    /**
     * 
     * @type {V1FeatureState}
     * @memberof V1Features
     */
    acpi?: V1FeatureState;
    /**
     * 
     * @type {V1FeatureAPIC}
     * @memberof V1Features
     */
    apic?: V1FeatureAPIC;
    /**
     * 
     * @type {V1FeatureHyperv}
     * @memberof V1Features
     */
    hyperv?: V1FeatureHyperv;
    /**
     * 
     * @type {V1HyperVPassthrough}
     * @memberof V1Features
     */
    hypervPassthrough?: V1HyperVPassthrough;
    /**
     * 
     * @type {V1FeatureKVM}
     * @memberof V1Features
     */
    kvm?: V1FeatureKVM;
    /**
     * 
     * @type {V1FeatureState}
     * @memberof V1Features
     */
    pvspinlock?: V1FeatureState;
    /**
     * 
     * @type {V1FeatureState}
     * @memberof V1Features
     */
    smm?: V1FeatureState;
}

/**
 * Check if a given object implements the V1Features interface.
 */
export function instanceOfV1Features(value: object): value is V1Features {
    return true;
}

export function V1FeaturesFromJSON(json: any): V1Features {
    return V1FeaturesFromJSONTyped(json, false);
}

export function V1FeaturesFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1Features {
    if (json == null) {
        return json;
    }
    return {
        
        'acpi': json['acpi'] == null ? undefined : V1FeatureStateFromJSON(json['acpi']),
        'apic': json['apic'] == null ? undefined : V1FeatureAPICFromJSON(json['apic']),
        'hyperv': json['hyperv'] == null ? undefined : V1FeatureHypervFromJSON(json['hyperv']),
        'hypervPassthrough': json['hypervPassthrough'] == null ? undefined : V1HyperVPassthroughFromJSON(json['hypervPassthrough']),
        'kvm': json['kvm'] == null ? undefined : V1FeatureKVMFromJSON(json['kvm']),
        'pvspinlock': json['pvspinlock'] == null ? undefined : V1FeatureStateFromJSON(json['pvspinlock']),
        'smm': json['smm'] == null ? undefined : V1FeatureStateFromJSON(json['smm']),
    };
}

export function V1FeaturesToJSON(json: any): V1Features {
    return V1FeaturesToJSONTyped(json, false);
}

export function V1FeaturesToJSONTyped(value?: V1Features | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'acpi': V1FeatureStateToJSON(value['acpi']),
        'apic': V1FeatureAPICToJSON(value['apic']),
        'hyperv': V1FeatureHypervToJSON(value['hyperv']),
        'hypervPassthrough': V1HyperVPassthroughToJSON(value['hypervPassthrough']),
        'kvm': V1FeatureKVMToJSON(value['kvm']),
        'pvspinlock': V1FeatureStateToJSON(value['pvspinlock']),
        'smm': V1FeatureStateToJSON(value['smm']),
    };
}

