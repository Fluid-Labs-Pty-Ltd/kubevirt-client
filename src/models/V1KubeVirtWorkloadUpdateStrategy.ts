/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * KubeVirtWorkloadUpdateStrategy defines options related to updating a KubeVirt install
 * @export
 * @interface V1KubeVirtWorkloadUpdateStrategy
 */
export interface V1KubeVirtWorkloadUpdateStrategy {
    /**
     * Duration is a wrapper around time.Duration which supports correct marshaling to YAML and JSON. In particular, it marshals into strings, which can be used as map keys in json.
     * @type {string}
     * @memberof V1KubeVirtWorkloadUpdateStrategy
     */
    batchEvictionInterval?: string;
    /**
     * BatchEvictionSize Represents the number of VMIs that can be forced updated per the BatchShutdownInteral interval
     * 
     * Defaults to 10
     * @type {number}
     * @memberof V1KubeVirtWorkloadUpdateStrategy
     */
    batchEvictionSize?: number;
    /**
     * WorkloadUpdateMethods defines the methods that can be used to disrupt workloads during automated workload updates. When multiple methods are present, the least disruptive method takes precedence over more disruptive methods. For example if both LiveMigrate and Shutdown methods are listed, only VMs which are not live migratable will be restarted/shutdown
     * 
     * An empty list defaults to no automated workload updating
     * @type {Array<string>}
     * @memberof V1KubeVirtWorkloadUpdateStrategy
     */
    workloadUpdateMethods?: Array<string>;
}

/**
 * Check if a given object implements the V1KubeVirtWorkloadUpdateStrategy interface.
 */
export function instanceOfV1KubeVirtWorkloadUpdateStrategy(value: object): value is V1KubeVirtWorkloadUpdateStrategy {
    return true;
}

export function V1KubeVirtWorkloadUpdateStrategyFromJSON(json: any): V1KubeVirtWorkloadUpdateStrategy {
    return V1KubeVirtWorkloadUpdateStrategyFromJSONTyped(json, false);
}

export function V1KubeVirtWorkloadUpdateStrategyFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1KubeVirtWorkloadUpdateStrategy {
    if (json == null) {
        return json;
    }
    return {
        
        'batchEvictionInterval': json['batchEvictionInterval'] == null ? undefined : json['batchEvictionInterval'],
        'batchEvictionSize': json['batchEvictionSize'] == null ? undefined : json['batchEvictionSize'],
        'workloadUpdateMethods': json['workloadUpdateMethods'] == null ? undefined : json['workloadUpdateMethods'],
    };
}

export function V1KubeVirtWorkloadUpdateStrategyToJSON(json: any): V1KubeVirtWorkloadUpdateStrategy {
    return V1KubeVirtWorkloadUpdateStrategyToJSONTyped(json, false);
}

export function V1KubeVirtWorkloadUpdateStrategyToJSONTyped(value?: V1KubeVirtWorkloadUpdateStrategy | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'batchEvictionInterval': value['batchEvictionInterval'],
        'batchEvictionSize': value['batchEvictionSize'],
        'workloadUpdateMethods': value['workloadUpdateMethods'],
    };
}

