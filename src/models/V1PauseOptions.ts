/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * PauseOptions may be provided on pause request.
 * @export
 * @interface V1PauseOptions
 */
export interface V1PauseOptions {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * @type {string}
     * @memberof V1PauseOptions
     */
    apiVersion?: string;
    /**
     * When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed
     * @type {Array<string>}
     * @memberof V1PauseOptions
     */
    dryRun?: Array<string>;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * @type {string}
     * @memberof V1PauseOptions
     */
    kind?: string;
}

/**
 * Check if a given object implements the V1PauseOptions interface.
 */
export function instanceOfV1PauseOptions(value: object): value is V1PauseOptions {
    return true;
}

export function V1PauseOptionsFromJSON(json: any): V1PauseOptions {
    return V1PauseOptionsFromJSONTyped(json, false);
}

export function V1PauseOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1PauseOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'apiVersion': json['apiVersion'] == null ? undefined : json['apiVersion'],
        'dryRun': json['dryRun'] == null ? undefined : json['dryRun'],
        'kind': json['kind'] == null ? undefined : json['kind'],
    };
}

export function V1PauseOptionsToJSON(json: any): V1PauseOptions {
    return V1PauseOptionsToJSONTyped(json, false);
}

export function V1PauseOptionsToJSONTyped(value?: V1PauseOptions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'apiVersion': value['apiVersion'],
        'dryRun': value['dryRun'],
        'kind': value['kind'],
    };
}

