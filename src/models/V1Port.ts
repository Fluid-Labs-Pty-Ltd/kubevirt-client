/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Port represents a port to expose from the virtual machine. Default protocol TCP. The port field is mandatory
 * @export
 * @interface V1Port
 */
export interface V1Port {
    /**
     * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
     * @type {string}
     * @memberof V1Port
     */
    name?: string;
    /**
     * Number of port to expose for the virtual machine. This must be a valid port number, 0 < x < 65536.
     * @type {number}
     * @memberof V1Port
     */
    port: number;
    /**
     * Protocol for port. Must be UDP or TCP. Defaults to "TCP".
     * @type {string}
     * @memberof V1Port
     */
    protocol?: string;
}

/**
 * Check if a given object implements the V1Port interface.
 */
export function instanceOfV1Port(value: object): value is V1Port {
    if (!('port' in value) || value['port'] === undefined) return false;
    return true;
}

export function V1PortFromJSON(json: any): V1Port {
    return V1PortFromJSONTyped(json, false);
}

export function V1PortFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1Port {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'port': json['port'],
        'protocol': json['protocol'] == null ? undefined : json['protocol'],
    };
}

export function V1PortToJSON(json: any): V1Port {
    return V1PortToJSONTyped(json, false);
}

export function V1PortToJSONTyped(value?: V1Port | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'port': value['port'],
        'protocol': value['protocol'],
    };
}

