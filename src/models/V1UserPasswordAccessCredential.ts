/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { V1UserPasswordAccessCredentialSource } from './V1UserPasswordAccessCredentialSource.js';
import {
    V1UserPasswordAccessCredentialSourceFromJSON,
    V1UserPasswordAccessCredentialSourceFromJSONTyped,
    V1UserPasswordAccessCredentialSourceToJSON,
    V1UserPasswordAccessCredentialSourceToJSONTyped,
} from './V1UserPasswordAccessCredentialSource.js';
import type { V1UserPasswordAccessCredentialPropagationMethod } from './V1UserPasswordAccessCredentialPropagationMethod.js';
import {
    V1UserPasswordAccessCredentialPropagationMethodFromJSON,
    V1UserPasswordAccessCredentialPropagationMethodFromJSONTyped,
    V1UserPasswordAccessCredentialPropagationMethodToJSON,
    V1UserPasswordAccessCredentialPropagationMethodToJSONTyped,
} from './V1UserPasswordAccessCredentialPropagationMethod.js';

/**
 * UserPasswordAccessCredential represents a source and propagation method for injecting user passwords into a vm guest Only one of its members may be specified.
 * @export
 * @interface V1UserPasswordAccessCredential
 */
export interface V1UserPasswordAccessCredential {
    /**
     * 
     * @type {V1UserPasswordAccessCredentialPropagationMethod}
     * @memberof V1UserPasswordAccessCredential
     */
    propagationMethod: V1UserPasswordAccessCredentialPropagationMethod;
    /**
     * 
     * @type {V1UserPasswordAccessCredentialSource}
     * @memberof V1UserPasswordAccessCredential
     */
    source: V1UserPasswordAccessCredentialSource;
}

/**
 * Check if a given object implements the V1UserPasswordAccessCredential interface.
 */
export function instanceOfV1UserPasswordAccessCredential(value: object): value is V1UserPasswordAccessCredential {
    if (!('propagationMethod' in value) || value['propagationMethod'] === undefined) return false;
    if (!('source' in value) || value['source'] === undefined) return false;
    return true;
}

export function V1UserPasswordAccessCredentialFromJSON(json: any): V1UserPasswordAccessCredential {
    return V1UserPasswordAccessCredentialFromJSONTyped(json, false);
}

export function V1UserPasswordAccessCredentialFromJSONTyped(json: any, _ignoreDiscriminator: boolean): V1UserPasswordAccessCredential {
    if (json == null) {
        return json;
    }
    return {
        
        'propagationMethod': V1UserPasswordAccessCredentialPropagationMethodFromJSON(json['propagationMethod']),
        'source': V1UserPasswordAccessCredentialSourceFromJSON(json['source']),
    };
}

export function V1UserPasswordAccessCredentialToJSON(json: any): V1UserPasswordAccessCredential {
    return V1UserPasswordAccessCredentialToJSONTyped(json, false);
}

export function V1UserPasswordAccessCredentialToJSONTyped(value?: V1UserPasswordAccessCredential | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'propagationMethod': V1UserPasswordAccessCredentialPropagationMethodToJSON(value['propagationMethod']),
        'source': V1UserPasswordAccessCredentialSourceToJSON(value['source']),
    };
}

