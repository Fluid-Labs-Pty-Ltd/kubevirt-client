/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * VirtualMachineStartFailure tracks VMIs which failed to transition successfully to running using the VM status
 * @export
 * @interface V1VirtualMachineStartFailure
 */
export interface V1VirtualMachineStartFailure {
    /**
     * 
     * @type {number}
     * @memberof V1VirtualMachineStartFailure
     */
    consecutiveFailCount?: number;
    /**
     * 
     * @type {string}
     * @memberof V1VirtualMachineStartFailure
     */
    lastFailedVMIUID?: string;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {string}
     * @memberof V1VirtualMachineStartFailure
     */
    retryAfterTimestamp?: string;
}

/**
 * Check if a given object implements the V1VirtualMachineStartFailure interface.
 */
export function instanceOfV1VirtualMachineStartFailure(value: object): value is V1VirtualMachineStartFailure {
    return true;
}

export function V1VirtualMachineStartFailureFromJSON(json: any): V1VirtualMachineStartFailure {
    return V1VirtualMachineStartFailureFromJSONTyped(json, false);
}

export function V1VirtualMachineStartFailureFromJSONTyped(json: any, _ignoreDiscriminator: boolean): V1VirtualMachineStartFailure {
    if (json == null) {
        return json;
    }
    return {
        
        'consecutiveFailCount': json['consecutiveFailCount'] == null ? undefined : json['consecutiveFailCount'],
        'lastFailedVMIUID': json['lastFailedVMIUID'] == null ? undefined : json['lastFailedVMIUID'],
        'retryAfterTimestamp': json['retryAfterTimestamp'] == null ? undefined : json['retryAfterTimestamp'],
    };
}

export function V1VirtualMachineStartFailureToJSON(json: any): V1VirtualMachineStartFailure {
    return V1VirtualMachineStartFailureToJSONTyped(json, false);
}

export function V1VirtualMachineStartFailureToJSONTyped(value?: V1VirtualMachineStartFailure | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'consecutiveFailCount': value['consecutiveFailCount'],
        'lastFailedVMIUID': value['lastFailedVMIUID'],
        'retryAfterTimestamp': value['retryAfterTimestamp'],
    };
}

