/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { K8sIoApiCoreV1TypedLocalObjectReference } from './K8sIoApiCoreV1TypedLocalObjectReference';
import {
    K8sIoApiCoreV1TypedLocalObjectReferenceFromJSON,
    K8sIoApiCoreV1TypedLocalObjectReferenceFromJSONTyped,
    K8sIoApiCoreV1TypedLocalObjectReferenceToJSON,
    K8sIoApiCoreV1TypedLocalObjectReferenceToJSONTyped,
} from './K8sIoApiCoreV1TypedLocalObjectReference';
import type { V1alpha1VirtualMachineCloneTemplateFilters } from './V1alpha1VirtualMachineCloneTemplateFilters';
import {
    V1alpha1VirtualMachineCloneTemplateFiltersFromJSON,
    V1alpha1VirtualMachineCloneTemplateFiltersFromJSONTyped,
    V1alpha1VirtualMachineCloneTemplateFiltersToJSON,
    V1alpha1VirtualMachineCloneTemplateFiltersToJSONTyped,
} from './V1alpha1VirtualMachineCloneTemplateFilters';

/**
 * 
 * @export
 * @interface V1alpha1VirtualMachineCloneSpec
 */
export interface V1alpha1VirtualMachineCloneSpec {
    /**
     * Example use: "!some/key*". For a detailed description, please refer to https://kubevirt.io/user-guide/operations/clone_api/#label-annotation-filters.
     * @type {Array<string>}
     * @memberof V1alpha1VirtualMachineCloneSpec
     */
    annotationFilters?: Array<string>;
    /**
     * Example use: "!some/key*". For a detailed description, please refer to https://kubevirt.io/user-guide/operations/clone_api/#label-annotation-filters.
     * @type {Array<string>}
     * @memberof V1alpha1VirtualMachineCloneSpec
     */
    labelFilters?: Array<string>;
    /**
     * NewMacAddresses manually sets that target interfaces' mac addresses. The key is the interface name and the value is the new mac address. If this field is not specified, a new MAC address will be generated automatically, as for any interface that is not included in this map.
     * @type {{ [key: string]: string; }}
     * @memberof V1alpha1VirtualMachineCloneSpec
     */
    newMacAddresses?: { [key: string]: string; };
    /**
     * NewSMBiosSerial manually sets that target's SMbios serial. If this field is not specified, a new serial will be generated automatically.
     * @type {string}
     * @memberof V1alpha1VirtualMachineCloneSpec
     */
    newSMBiosSerial?: string;
    /**
     * 
     * @type {K8sIoApiCoreV1TypedLocalObjectReference}
     * @memberof V1alpha1VirtualMachineCloneSpec
     */
    source: K8sIoApiCoreV1TypedLocalObjectReference;
    /**
     * 
     * @type {K8sIoApiCoreV1TypedLocalObjectReference}
     * @memberof V1alpha1VirtualMachineCloneSpec
     */
    target?: K8sIoApiCoreV1TypedLocalObjectReference;
    /**
     * 
     * @type {V1alpha1VirtualMachineCloneTemplateFilters}
     * @memberof V1alpha1VirtualMachineCloneSpec
     */
    template?: V1alpha1VirtualMachineCloneTemplateFilters;
}

/**
 * Check if a given object implements the V1alpha1VirtualMachineCloneSpec interface.
 */
export function instanceOfV1alpha1VirtualMachineCloneSpec(value: object): value is V1alpha1VirtualMachineCloneSpec {
    if (!('source' in value) || value['source'] === undefined) return false;
    return true;
}

export function V1alpha1VirtualMachineCloneSpecFromJSON(json: any): V1alpha1VirtualMachineCloneSpec {
    return V1alpha1VirtualMachineCloneSpecFromJSONTyped(json, false);
}

export function V1alpha1VirtualMachineCloneSpecFromJSONTyped(json: any, _ignoreDiscriminator: boolean): V1alpha1VirtualMachineCloneSpec {
    if (json == null) {
        return json;
    }
    return {
        
        'annotationFilters': json['annotationFilters'] == null ? undefined : json['annotationFilters'],
        'labelFilters': json['labelFilters'] == null ? undefined : json['labelFilters'],
        'newMacAddresses': json['newMacAddresses'] == null ? undefined : json['newMacAddresses'],
        'newSMBiosSerial': json['newSMBiosSerial'] == null ? undefined : json['newSMBiosSerial'],
        'source': K8sIoApiCoreV1TypedLocalObjectReferenceFromJSON(json['source']),
        'target': json['target'] == null ? undefined : K8sIoApiCoreV1TypedLocalObjectReferenceFromJSON(json['target']),
        'template': json['template'] == null ? undefined : V1alpha1VirtualMachineCloneTemplateFiltersFromJSON(json['template']),
    };
}

export function V1alpha1VirtualMachineCloneSpecToJSON(json: any): V1alpha1VirtualMachineCloneSpec {
    return V1alpha1VirtualMachineCloneSpecToJSONTyped(json, false);
}

export function V1alpha1VirtualMachineCloneSpecToJSONTyped(value?: V1alpha1VirtualMachineCloneSpec | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'annotationFilters': value['annotationFilters'],
        'labelFilters': value['labelFilters'],
        'newMacAddresses': value['newMacAddresses'],
        'newSMBiosSerial': value['newSMBiosSerial'],
        'source': K8sIoApiCoreV1TypedLocalObjectReferenceToJSON(value['source']),
        'target': K8sIoApiCoreV1TypedLocalObjectReferenceToJSON(value['target']),
        'template': V1alpha1VirtualMachineCloneTemplateFiltersToJSON(value['template']),
    };
}

