/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { V1VGPUOptions } from './V1VGPUOptions.js';
import {
    V1VGPUOptionsFromJSON,
    V1VGPUOptionsFromJSONTyped,
    V1VGPUOptionsToJSON,
    V1VGPUOptionsToJSONTyped,
} from './V1VGPUOptions.js';
import type { V1BlockSize } from './V1BlockSize.js';
import {
    V1BlockSizeFromJSON,
    V1BlockSizeFromJSONTyped,
    V1BlockSizeToJSON,
    V1BlockSizeToJSONTyped,
} from './V1BlockSize.js';
import type { V1TPMDevice } from './V1TPMDevice.js';
import {
    V1TPMDeviceFromJSON,
    V1TPMDeviceFromJSONTyped,
    V1TPMDeviceToJSON,
    V1TPMDeviceToJSONTyped,
} from './V1TPMDevice.js';

/**
 * DevicePreferences contains various optional Device preferences.
 * @export
 * @interface V1beta1DevicePreferences
 */
export interface V1beta1DevicePreferences {
    /**
     * PreferredAutoattachGraphicsDevice optionally defines the preferred value of AutoattachGraphicsDevice
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredAutoattachGraphicsDevice?: boolean;
    /**
     * PreferredAutoattachInputDevice optionally defines the preferred value of AutoattachInputDevice
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredAutoattachInputDevice?: boolean;
    /**
     * PreferredAutoattachMemBalloon optionally defines the preferred value of AutoattachMemBalloon
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredAutoattachMemBalloon?: boolean;
    /**
     * PreferredAutoattachPodInterface optionally defines the preferred value of AutoattachPodInterface
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredAutoattachPodInterface?: boolean;
    /**
     * PreferredAutoattachSerialConsole optionally defines the preferred value of AutoattachSerialConsole
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredAutoattachSerialConsole?: boolean;
    /**
     * PreferredBlockMultiQueue optionally enables the vhost multiqueue feature for virtio disks.
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredBlockMultiQueue?: boolean;
    /**
     * PreferredCdromBus optionally defines the preferred bus for Cdrom Disk devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredCdromBus?: string;
    /**
     * PreferredDisableHotplug optionally defines the preferred value of DisableHotplug
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredDisableHotplug?: boolean;
    /**
     * 
     * @type {V1BlockSize}
     * @memberof V1beta1DevicePreferences
     */
    preferredDiskBlockSize?: V1BlockSize;
    /**
     * PreferredDiskBus optionally defines the preferred bus for Disk Disk devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredDiskBus?: string;
    /**
     * PreferredCache optionally defines the DriverCache to be used by Disk devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredDiskCache?: string;
    /**
     * PreferredDedicatedIoThread optionally enables dedicated IO threads for Disk devices using the virtio bus.
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredDiskDedicatedIoThread?: boolean;
    /**
     * PreferredIo optionally defines the QEMU disk IO mode to be used by Disk devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredDiskIO?: string;
    /**
     * PreferredInputBus optionally defines the preferred bus for Input devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredInputBus?: string;
    /**
     * PreferredInputType optionally defines the preferred type for Input devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredInputType?: string;
    /**
     * InterfaceMasquerade connects to a given network using netfilter rules to nat the traffic.
     * @type {object}
     * @memberof V1beta1DevicePreferences
     */
    preferredInterfaceMasquerade?: object;
    /**
     * PreferredInterfaceModel optionally defines the preferred model to be used by Interface devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredInterfaceModel?: string;
    /**
     * PreferredLunBus optionally defines the preferred bus for Lun Disk devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredLunBus?: string;
    /**
     * PreferredNetworkInterfaceMultiQueue optionally enables the vhost multiqueue feature for virtio interfaces.
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredNetworkInterfaceMultiQueue?: boolean;
    /**
     * Rng represents the random device passed from host
     * @type {object}
     * @memberof V1beta1DevicePreferences
     */
    preferredRng?: object;
    /**
     * PreferredSoundModel optionally defines the preferred model for Sound devices.
     * @type {string}
     * @memberof V1beta1DevicePreferences
     */
    preferredSoundModel?: string;
    /**
     * 
     * @type {V1TPMDevice}
     * @memberof V1beta1DevicePreferences
     */
    preferredTPM?: V1TPMDevice;
    /**
     * PreferredUseVirtioTransitional optionally defines the preferred value of UseVirtioTransitional
     * @type {boolean}
     * @memberof V1beta1DevicePreferences
     */
    preferredUseVirtioTransitional?: boolean;
    /**
     * 
     * @type {V1VGPUOptions}
     * @memberof V1beta1DevicePreferences
     */
    preferredVirtualGPUOptions?: V1VGPUOptions;
}

/**
 * Check if a given object implements the V1beta1DevicePreferences interface.
 */
export function instanceOfV1beta1DevicePreferences(value: object): value is V1beta1DevicePreferences {
    return true;
}

export function V1beta1DevicePreferencesFromJSON(json: any): V1beta1DevicePreferences {
    return V1beta1DevicePreferencesFromJSONTyped(json, false);
}

export function V1beta1DevicePreferencesFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta1DevicePreferences {
    if (json == null) {
        return json;
    }
    return {
        
        'preferredAutoattachGraphicsDevice': json['preferredAutoattachGraphicsDevice'] == null ? undefined : json['preferredAutoattachGraphicsDevice'],
        'preferredAutoattachInputDevice': json['preferredAutoattachInputDevice'] == null ? undefined : json['preferredAutoattachInputDevice'],
        'preferredAutoattachMemBalloon': json['preferredAutoattachMemBalloon'] == null ? undefined : json['preferredAutoattachMemBalloon'],
        'preferredAutoattachPodInterface': json['preferredAutoattachPodInterface'] == null ? undefined : json['preferredAutoattachPodInterface'],
        'preferredAutoattachSerialConsole': json['preferredAutoattachSerialConsole'] == null ? undefined : json['preferredAutoattachSerialConsole'],
        'preferredBlockMultiQueue': json['preferredBlockMultiQueue'] == null ? undefined : json['preferredBlockMultiQueue'],
        'preferredCdromBus': json['preferredCdromBus'] == null ? undefined : json['preferredCdromBus'],
        'preferredDisableHotplug': json['preferredDisableHotplug'] == null ? undefined : json['preferredDisableHotplug'],
        'preferredDiskBlockSize': json['preferredDiskBlockSize'] == null ? undefined : V1BlockSizeFromJSON(json['preferredDiskBlockSize']),
        'preferredDiskBus': json['preferredDiskBus'] == null ? undefined : json['preferredDiskBus'],
        'preferredDiskCache': json['preferredDiskCache'] == null ? undefined : json['preferredDiskCache'],
        'preferredDiskDedicatedIoThread': json['preferredDiskDedicatedIoThread'] == null ? undefined : json['preferredDiskDedicatedIoThread'],
        'preferredDiskIO': json['preferredDiskIO'] == null ? undefined : json['preferredDiskIO'],
        'preferredInputBus': json['preferredInputBus'] == null ? undefined : json['preferredInputBus'],
        'preferredInputType': json['preferredInputType'] == null ? undefined : json['preferredInputType'],
        'preferredInterfaceMasquerade': json['preferredInterfaceMasquerade'] == null ? undefined : json['preferredInterfaceMasquerade'],
        'preferredInterfaceModel': json['preferredInterfaceModel'] == null ? undefined : json['preferredInterfaceModel'],
        'preferredLunBus': json['preferredLunBus'] == null ? undefined : json['preferredLunBus'],
        'preferredNetworkInterfaceMultiQueue': json['preferredNetworkInterfaceMultiQueue'] == null ? undefined : json['preferredNetworkInterfaceMultiQueue'],
        'preferredRng': json['preferredRng'] == null ? undefined : json['preferredRng'],
        'preferredSoundModel': json['preferredSoundModel'] == null ? undefined : json['preferredSoundModel'],
        'preferredTPM': json['preferredTPM'] == null ? undefined : V1TPMDeviceFromJSON(json['preferredTPM']),
        'preferredUseVirtioTransitional': json['preferredUseVirtioTransitional'] == null ? undefined : json['preferredUseVirtioTransitional'],
        'preferredVirtualGPUOptions': json['preferredVirtualGPUOptions'] == null ? undefined : V1VGPUOptionsFromJSON(json['preferredVirtualGPUOptions']),
    };
}

export function V1beta1DevicePreferencesToJSON(json: any): V1beta1DevicePreferences {
    return V1beta1DevicePreferencesToJSONTyped(json, false);
}

export function V1beta1DevicePreferencesToJSONTyped(value?: V1beta1DevicePreferences | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'preferredAutoattachGraphicsDevice': value['preferredAutoattachGraphicsDevice'],
        'preferredAutoattachInputDevice': value['preferredAutoattachInputDevice'],
        'preferredAutoattachMemBalloon': value['preferredAutoattachMemBalloon'],
        'preferredAutoattachPodInterface': value['preferredAutoattachPodInterface'],
        'preferredAutoattachSerialConsole': value['preferredAutoattachSerialConsole'],
        'preferredBlockMultiQueue': value['preferredBlockMultiQueue'],
        'preferredCdromBus': value['preferredCdromBus'],
        'preferredDisableHotplug': value['preferredDisableHotplug'],
        'preferredDiskBlockSize': V1BlockSizeToJSON(value['preferredDiskBlockSize']),
        'preferredDiskBus': value['preferredDiskBus'],
        'preferredDiskCache': value['preferredDiskCache'],
        'preferredDiskDedicatedIoThread': value['preferredDiskDedicatedIoThread'],
        'preferredDiskIO': value['preferredDiskIO'],
        'preferredInputBus': value['preferredInputBus'],
        'preferredInputType': value['preferredInputType'],
        'preferredInterfaceMasquerade': value['preferredInterfaceMasquerade'],
        'preferredInterfaceModel': value['preferredInterfaceModel'],
        'preferredLunBus': value['preferredLunBus'],
        'preferredNetworkInterfaceMultiQueue': value['preferredNetworkInterfaceMultiQueue'],
        'preferredRng': value['preferredRng'],
        'preferredSoundModel': value['preferredSoundModel'],
        'preferredTPM': V1TPMDeviceToJSON(value['preferredTPM']),
        'preferredUseVirtioTransitional': value['preferredUseVirtioTransitional'],
        'preferredVirtualGPUOptions': V1VGPUOptionsToJSON(value['preferredVirtualGPUOptions']),
    };
}

