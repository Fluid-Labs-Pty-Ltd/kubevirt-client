/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { V1EFI } from './V1EFI.js';
import {
    V1EFIFromJSON,
    V1EFIFromJSONTyped,
    V1EFIToJSON,
    V1EFIToJSONTyped,
} from './V1EFI.js';

/**
 * FirmwarePreferences contains various optional defaults for Firmware.
 * @export
 * @interface V1beta1FirmwarePreferences
 */
export interface V1beta1FirmwarePreferences {
    /**
     * 
     * @type {V1EFI}
     * @memberof V1beta1FirmwarePreferences
     */
    preferredEfi?: V1EFI;
    /**
     * PreferredUseBios optionally enables BIOS
     * @type {boolean}
     * @memberof V1beta1FirmwarePreferences
     */
    preferredUseBios?: boolean;
    /**
     * PreferredUseBiosSerial optionally transmitts BIOS output over the serial.
     * 
     * Requires PreferredUseBios to be enabled.
     * @type {boolean}
     * @memberof V1beta1FirmwarePreferences
     */
    preferredUseBiosSerial?: boolean;
    /**
     * PreferredUseEfi optionally enables EFI
     * @type {boolean}
     * @memberof V1beta1FirmwarePreferences
     */
    preferredUseEfi?: boolean;
    /**
     * PreferredUseSecureBoot optionally enables SecureBoot and the OVMF roms will be swapped for SecureBoot-enabled ones.
     * 
     * Requires PreferredUseEfi and PreferredSmm to be enabled.
     * @type {boolean}
     * @memberof V1beta1FirmwarePreferences
     */
    preferredUseSecureBoot?: boolean;
}

/**
 * Check if a given object implements the V1beta1FirmwarePreferences interface.
 */
export function instanceOfV1beta1FirmwarePreferences(value: object): value is V1beta1FirmwarePreferences {
    return true;
}

export function V1beta1FirmwarePreferencesFromJSON(json: any): V1beta1FirmwarePreferences {
    return V1beta1FirmwarePreferencesFromJSONTyped(json, false);
}

export function V1beta1FirmwarePreferencesFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta1FirmwarePreferences {
    if (json == null) {
        return json;
    }
    return {
        
        'preferredEfi': json['preferredEfi'] == null ? undefined : V1EFIFromJSON(json['preferredEfi']),
        'preferredUseBios': json['preferredUseBios'] == null ? undefined : json['preferredUseBios'],
        'preferredUseBiosSerial': json['preferredUseBiosSerial'] == null ? undefined : json['preferredUseBiosSerial'],
        'preferredUseEfi': json['preferredUseEfi'] == null ? undefined : json['preferredUseEfi'],
        'preferredUseSecureBoot': json['preferredUseSecureBoot'] == null ? undefined : json['preferredUseSecureBoot'],
    };
}

export function V1beta1FirmwarePreferencesToJSON(json: any): V1beta1FirmwarePreferences {
    return V1beta1FirmwarePreferencesToJSONTyped(json, false);
}

export function V1beta1FirmwarePreferencesToJSONTyped(value?: V1beta1FirmwarePreferences | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'preferredEfi': V1EFIToJSON(value['preferredEfi']),
        'preferredUseBios': value['preferredUseBios'],
        'preferredUseBiosSerial': value['preferredUseBiosSerial'],
        'preferredUseEfi': value['preferredUseEfi'],
        'preferredUseSecureBoot': value['preferredUseSecureBoot'],
    };
}

