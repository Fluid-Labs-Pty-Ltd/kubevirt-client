/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1beta1VirtualMachineExportVolume } from './V1beta1VirtualMachineExportVolume';
import {
    V1beta1VirtualMachineExportVolumeFromJSON,
    V1beta1VirtualMachineExportVolumeFromJSONTyped,
    V1beta1VirtualMachineExportVolumeToJSON,
    V1beta1VirtualMachineExportVolumeToJSONTyped,
} from './V1beta1VirtualMachineExportVolume';
import type { V1beta1VirtualMachineExportManifest } from './V1beta1VirtualMachineExportManifest';
import {
    V1beta1VirtualMachineExportManifestFromJSON,
    V1beta1VirtualMachineExportManifestFromJSONTyped,
    V1beta1VirtualMachineExportManifestToJSON,
    V1beta1VirtualMachineExportManifestToJSONTyped,
} from './V1beta1VirtualMachineExportManifest';

/**
 * VirtualMachineExportLink contains a list of volumes available for export, as well as the URLs to obtain these volumes
 * @export
 * @interface V1beta1VirtualMachineExportLink
 */
export interface V1beta1VirtualMachineExportLink {
    /**
     * Cert is the public CA certificate base64 encoded
     * @type {string}
     * @memberof V1beta1VirtualMachineExportLink
     */
    cert: string;
    /**
     * Manifests is a list of available manifests for the export
     * @type {Array<V1beta1VirtualMachineExportManifest>}
     * @memberof V1beta1VirtualMachineExportLink
     */
    manifests?: Array<V1beta1VirtualMachineExportManifest>;
    /**
     * Volumes is a list of available volumes to export
     * @type {Array<V1beta1VirtualMachineExportVolume>}
     * @memberof V1beta1VirtualMachineExportLink
     */
    volumes?: Array<V1beta1VirtualMachineExportVolume>;
}

/**
 * Check if a given object implements the V1beta1VirtualMachineExportLink interface.
 */
export function instanceOfV1beta1VirtualMachineExportLink(value: object): value is V1beta1VirtualMachineExportLink {
    if (!('cert' in value) || value['cert'] === undefined) return false;
    return true;
}

export function V1beta1VirtualMachineExportLinkFromJSON(json: any): V1beta1VirtualMachineExportLink {
    return V1beta1VirtualMachineExportLinkFromJSONTyped(json, false);
}

export function V1beta1VirtualMachineExportLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta1VirtualMachineExportLink {
    if (json == null) {
        return json;
    }
    return {
        
        'cert': json['cert'],
        'manifests': json['manifests'] == null ? undefined : ((json['manifests'] as Array<any>).map(V1beta1VirtualMachineExportManifestFromJSON)),
        'volumes': json['volumes'] == null ? undefined : ((json['volumes'] as Array<any>).map(V1beta1VirtualMachineExportVolumeFromJSON)),
    };
}

export function V1beta1VirtualMachineExportLinkToJSON(json: any): V1beta1VirtualMachineExportLink {
    return V1beta1VirtualMachineExportLinkToJSONTyped(json, false);
}

export function V1beta1VirtualMachineExportLinkToJSONTyped(value?: V1beta1VirtualMachineExportLink | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'cert': value['cert'],
        'manifests': value['manifests'] == null ? undefined : ((value['manifests'] as Array<any>).map(V1beta1VirtualMachineExportManifestToJSON)),
        'volumes': value['volumes'] == null ? undefined : ((value['volumes'] as Array<any>).map(V1beta1VirtualMachineExportVolumeToJSON)),
    };
}

