/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { V1beta1ClockPreferences } from './V1beta1ClockPreferences.js';
import {
    V1beta1ClockPreferencesFromJSON,
    V1beta1ClockPreferencesFromJSONTyped,
    V1beta1ClockPreferencesToJSON,
    V1beta1ClockPreferencesToJSONTyped,
} from './V1beta1ClockPreferences.js';
import type { V1beta1FeaturePreferences } from './V1beta1FeaturePreferences.js';
import {
    V1beta1FeaturePreferencesFromJSON,
    V1beta1FeaturePreferencesFromJSONTyped,
    V1beta1FeaturePreferencesToJSON,
    V1beta1FeaturePreferencesToJSONTyped,
} from './V1beta1FeaturePreferences.js';
import type { V1beta1PreferenceRequirements } from './V1beta1PreferenceRequirements.js';
import {
    V1beta1PreferenceRequirementsFromJSON,
    V1beta1PreferenceRequirementsFromJSONTyped,
    V1beta1PreferenceRequirementsToJSON,
    V1beta1PreferenceRequirementsToJSONTyped,
} from './V1beta1PreferenceRequirements.js';
import type { V1beta1DevicePreferences } from './V1beta1DevicePreferences.js';
import {
    V1beta1DevicePreferencesFromJSON,
    V1beta1DevicePreferencesFromJSONTyped,
    V1beta1DevicePreferencesToJSON,
    V1beta1DevicePreferencesToJSONTyped,
} from './V1beta1DevicePreferences.js';
import type { V1beta1CPUPreferences } from './V1beta1CPUPreferences.js';
import {
    V1beta1CPUPreferencesFromJSON,
    V1beta1CPUPreferencesFromJSONTyped,
    V1beta1CPUPreferencesToJSON,
    V1beta1CPUPreferencesToJSONTyped,
} from './V1beta1CPUPreferences.js';
import type { V1beta1VolumePreferences } from './V1beta1VolumePreferences.js';
import {
    V1beta1VolumePreferencesFromJSON,
    V1beta1VolumePreferencesFromJSONTyped,
    V1beta1VolumePreferencesToJSON,
    V1beta1VolumePreferencesToJSONTyped,
} from './V1beta1VolumePreferences.js';
import type { V1beta1MachinePreferences } from './V1beta1MachinePreferences.js';
import {
    V1beta1MachinePreferencesFromJSON,
    V1beta1MachinePreferencesFromJSONTyped,
    V1beta1MachinePreferencesToJSON,
    V1beta1MachinePreferencesToJSONTyped,
} from './V1beta1MachinePreferences.js';
import type { V1beta1FirmwarePreferences } from './V1beta1FirmwarePreferences.js';
import {
    V1beta1FirmwarePreferencesFromJSON,
    V1beta1FirmwarePreferencesFromJSONTyped,
    V1beta1FirmwarePreferencesToJSON,
    V1beta1FirmwarePreferencesToJSONTyped,
} from './V1beta1FirmwarePreferences.js';

/**
 * VirtualMachinePreferenceSpec is a description of the VirtualMachinePreference or VirtualMachineClusterPreference.
 * @export
 * @interface V1beta1VirtualMachinePreferenceSpec
 */
export interface V1beta1VirtualMachinePreferenceSpec {
    /**
     * Optionally defines preferred Annotations to be applied to the VirtualMachineInstance
     * @type {{ [key: string]: string; }}
     * @memberof V1beta1VirtualMachinePreferenceSpec
     */
    annotations?: { [key: string]: string; };
    /**
     * 
     * @type {V1beta1ClockPreferences}
     * @memberof V1beta1VirtualMachinePreferenceSpec
     */
    clock?: V1beta1ClockPreferences;
    /**
     * 
     * @type {V1beta1CPUPreferences}
     * @memberof V1beta1VirtualMachinePreferenceSpec
     */
    cpu?: V1beta1CPUPreferences;
    /**
     * 
     * @type {V1beta1DevicePreferences}
     * @memberof V1beta1VirtualMachinePreferenceSpec
     */
    devices?: V1beta1DevicePreferences;
    /**
     * 
     * @type {V1beta1FeaturePreferences}
     * @memberof V1beta1VirtualMachinePreferenceSpec
     */
    features?: V1beta1FeaturePreferences;
    /**
     * 
     * @type {V1beta1FirmwarePreferences}
     * @memberof V1beta1VirtualMachinePreferenceSpec
     */
    firmware?: V1beta1FirmwarePreferences;
    /**
     * 
     * @type {V1beta1MachinePreferences}
     * @memberof V1beta1VirtualMachinePreferenceSpec
     */
    machine?: V1beta1MachinePreferences;
    /**
     * PreferSpreadSocketToCoreRatio defines the ratio to spread vCPUs between cores and sockets, it defaults to 2.
     * @type {number}
     * @memberof V1beta1VirtualMachinePreferenceSpec
     */
    preferSpreadSocketToCoreRatio?: number;
    /**
     * Subdomain of the VirtualMachineInstance
     * @type {string}
     * @memberof V1beta1VirtualMachinePreferenceSpec
     */
    preferredSubdomain?: string;
    /**
     * Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.
     * @type {number}
     * @memberof V1beta1VirtualMachinePreferenceSpec
     */
    preferredTerminationGracePeriodSeconds?: number;
    /**
     * 
     * @type {V1beta1PreferenceRequirements}
     * @memberof V1beta1VirtualMachinePreferenceSpec
     */
    requirements?: V1beta1PreferenceRequirements;
    /**
     * 
     * @type {V1beta1VolumePreferences}
     * @memberof V1beta1VirtualMachinePreferenceSpec
     */
    volumes?: V1beta1VolumePreferences;
}

/**
 * Check if a given object implements the V1beta1VirtualMachinePreferenceSpec interface.
 */
export function instanceOfV1beta1VirtualMachinePreferenceSpec(value: object): value is V1beta1VirtualMachinePreferenceSpec {
    return true;
}

export function V1beta1VirtualMachinePreferenceSpecFromJSON(json: any): V1beta1VirtualMachinePreferenceSpec {
    return V1beta1VirtualMachinePreferenceSpecFromJSONTyped(json, false);
}

export function V1beta1VirtualMachinePreferenceSpecFromJSONTyped(json: any, _ignoreDiscriminator: boolean): V1beta1VirtualMachinePreferenceSpec {
    if (json == null) {
        return json;
    }
    return {
        
        'annotations': json['annotations'] == null ? undefined : json['annotations'],
        'clock': json['clock'] == null ? undefined : V1beta1ClockPreferencesFromJSON(json['clock']),
        'cpu': json['cpu'] == null ? undefined : V1beta1CPUPreferencesFromJSON(json['cpu']),
        'devices': json['devices'] == null ? undefined : V1beta1DevicePreferencesFromJSON(json['devices']),
        'features': json['features'] == null ? undefined : V1beta1FeaturePreferencesFromJSON(json['features']),
        'firmware': json['firmware'] == null ? undefined : V1beta1FirmwarePreferencesFromJSON(json['firmware']),
        'machine': json['machine'] == null ? undefined : V1beta1MachinePreferencesFromJSON(json['machine']),
        'preferSpreadSocketToCoreRatio': json['preferSpreadSocketToCoreRatio'] == null ? undefined : json['preferSpreadSocketToCoreRatio'],
        'preferredSubdomain': json['preferredSubdomain'] == null ? undefined : json['preferredSubdomain'],
        'preferredTerminationGracePeriodSeconds': json['preferredTerminationGracePeriodSeconds'] == null ? undefined : json['preferredTerminationGracePeriodSeconds'],
        'requirements': json['requirements'] == null ? undefined : V1beta1PreferenceRequirementsFromJSON(json['requirements']),
        'volumes': json['volumes'] == null ? undefined : V1beta1VolumePreferencesFromJSON(json['volumes']),
    };
}

export function V1beta1VirtualMachinePreferenceSpecToJSON(json: any): V1beta1VirtualMachinePreferenceSpec {
    return V1beta1VirtualMachinePreferenceSpecToJSONTyped(json, false);
}

export function V1beta1VirtualMachinePreferenceSpecToJSONTyped(value?: V1beta1VirtualMachinePreferenceSpec | null, _ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'annotations': value['annotations'],
        'clock': V1beta1ClockPreferencesToJSON(value['clock']),
        'cpu': V1beta1CPUPreferencesToJSON(value['cpu']),
        'devices': V1beta1DevicePreferencesToJSON(value['devices']),
        'features': V1beta1FeaturePreferencesToJSON(value['features']),
        'firmware': V1beta1FirmwarePreferencesToJSON(value['firmware']),
        'machine': V1beta1MachinePreferencesToJSON(value['machine']),
        'preferSpreadSocketToCoreRatio': value['preferSpreadSocketToCoreRatio'],
        'preferredSubdomain': value['preferredSubdomain'],
        'preferredTerminationGracePeriodSeconds': value['preferredTerminationGracePeriodSeconds'],
        'requirements': V1beta1PreferenceRequirementsToJSON(value['requirements']),
        'volumes': V1beta1VolumePreferencesToJSON(value['volumes']),
    };
}

