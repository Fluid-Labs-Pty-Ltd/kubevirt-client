/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { K8sIoApiCoreV1TypedLocalObjectReference } from './K8sIoApiCoreV1TypedLocalObjectReference.js';
import {
    K8sIoApiCoreV1TypedLocalObjectReferenceFromJSON,
    K8sIoApiCoreV1TypedLocalObjectReferenceFromJSONTyped,
    K8sIoApiCoreV1TypedLocalObjectReferenceToJSON,
    K8sIoApiCoreV1TypedLocalObjectReferenceToJSONTyped,
} from './K8sIoApiCoreV1TypedLocalObjectReference.js';

/**
 * VirtualMachineRestoreSpec is the spec for a VirtualMachineRestoreresource
 * @export
 * @interface V1beta1VirtualMachineRestoreSpec
 */
export interface V1beta1VirtualMachineRestoreSpec {
    /**
     * If the target for the restore does not exist, it will be created. Patches holds JSON patches that would be applied to the target manifest before it's created. Patches should fit the target's Kind.
     * 
     * Example for a patch: {"op": "replace", "path": "/metadata/name", "value": "new-vm-name"}
     * @type {Array<string>}
     * @memberof V1beta1VirtualMachineRestoreSpec
     */
    patches?: Array<string>;
    /**
     * 
     * @type {K8sIoApiCoreV1TypedLocalObjectReference}
     * @memberof V1beta1VirtualMachineRestoreSpec
     */
    target: K8sIoApiCoreV1TypedLocalObjectReference;
    /**
     * 
     * @type {string}
     * @memberof V1beta1VirtualMachineRestoreSpec
     */
    virtualMachineSnapshotName: string;
}

/**
 * Check if a given object implements the V1beta1VirtualMachineRestoreSpec interface.
 */
export function instanceOfV1beta1VirtualMachineRestoreSpec(value: object): value is V1beta1VirtualMachineRestoreSpec {
    if (!('target' in value) || value['target'] === undefined) return false;
    if (!('virtualMachineSnapshotName' in value) || value['virtualMachineSnapshotName'] === undefined) return false;
    return true;
}

export function V1beta1VirtualMachineRestoreSpecFromJSON(json: any): V1beta1VirtualMachineRestoreSpec {
    return V1beta1VirtualMachineRestoreSpecFromJSONTyped(json, false);
}

export function V1beta1VirtualMachineRestoreSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta1VirtualMachineRestoreSpec {
    if (json == null) {
        return json;
    }
    return {
        
        'patches': json['patches'] == null ? undefined : json['patches'],
        'target': K8sIoApiCoreV1TypedLocalObjectReferenceFromJSON(json['target']),
        'virtualMachineSnapshotName': json['virtualMachineSnapshotName'],
    };
}

export function V1beta1VirtualMachineRestoreSpecToJSON(json: any): V1beta1VirtualMachineRestoreSpec {
    return V1beta1VirtualMachineRestoreSpecToJSONTyped(json, false);
}

export function V1beta1VirtualMachineRestoreSpecToJSONTyped(value?: V1beta1VirtualMachineRestoreSpec | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'patches': value['patches'],
        'target': K8sIoApiCoreV1TypedLocalObjectReferenceToJSON(value['target']),
        'virtualMachineSnapshotName': value['virtualMachineSnapshotName'],
    };
}

