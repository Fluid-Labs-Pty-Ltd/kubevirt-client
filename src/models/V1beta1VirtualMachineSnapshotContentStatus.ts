/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1beta1Error } from './V1beta1Error';
import {
    V1beta1ErrorFromJSON,
    V1beta1ErrorFromJSONTyped,
    V1beta1ErrorToJSON,
    V1beta1ErrorToJSONTyped,
} from './V1beta1Error';
import type { V1beta1VolumeSnapshotStatus } from './V1beta1VolumeSnapshotStatus';
import {
    V1beta1VolumeSnapshotStatusFromJSON,
    V1beta1VolumeSnapshotStatusFromJSONTyped,
    V1beta1VolumeSnapshotStatusToJSON,
    V1beta1VolumeSnapshotStatusToJSONTyped,
} from './V1beta1VolumeSnapshotStatus';

/**
 * VirtualMachineSnapshotContentStatus is the status for a VirtualMachineSnapshotStatus resource
 * @export
 * @interface V1beta1VirtualMachineSnapshotContentStatus
 */
export interface V1beta1VirtualMachineSnapshotContentStatus {
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {string}
     * @memberof V1beta1VirtualMachineSnapshotContentStatus
     */
    creationTime?: string;
    /**
     * 
     * @type {V1beta1Error}
     * @memberof V1beta1VirtualMachineSnapshotContentStatus
     */
    error?: V1beta1Error;
    /**
     * 
     * @type {boolean}
     * @memberof V1beta1VirtualMachineSnapshotContentStatus
     */
    readyToUse?: boolean;
    /**
     * 
     * @type {Array<V1beta1VolumeSnapshotStatus>}
     * @memberof V1beta1VirtualMachineSnapshotContentStatus
     */
    volumeSnapshotStatus?: Array<V1beta1VolumeSnapshotStatus>;
}

/**
 * Check if a given object implements the V1beta1VirtualMachineSnapshotContentStatus interface.
 */
export function instanceOfV1beta1VirtualMachineSnapshotContentStatus(value: object): value is V1beta1VirtualMachineSnapshotContentStatus {
    return true;
}

export function V1beta1VirtualMachineSnapshotContentStatusFromJSON(json: any): V1beta1VirtualMachineSnapshotContentStatus {
    return V1beta1VirtualMachineSnapshotContentStatusFromJSONTyped(json, false);
}

export function V1beta1VirtualMachineSnapshotContentStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1beta1VirtualMachineSnapshotContentStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'creationTime': json['creationTime'] == null ? undefined : json['creationTime'],
        'error': json['error'] == null ? undefined : V1beta1ErrorFromJSON(json['error']),
        'readyToUse': json['readyToUse'] == null ? undefined : json['readyToUse'],
        'volumeSnapshotStatus': json['volumeSnapshotStatus'] == null ? undefined : ((json['volumeSnapshotStatus'] as Array<any>).map(V1beta1VolumeSnapshotStatusFromJSON)),
    };
}

export function V1beta1VirtualMachineSnapshotContentStatusToJSON(json: any): V1beta1VirtualMachineSnapshotContentStatus {
    return V1beta1VirtualMachineSnapshotContentStatusToJSONTyped(json, false);
}

export function V1beta1VirtualMachineSnapshotContentStatusToJSONTyped(value?: V1beta1VirtualMachineSnapshotContentStatus | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'creationTime': value['creationTime'],
        'error': V1beta1ErrorToJSON(value['error']),
        'readyToUse': value['readyToUse'],
        'volumeSnapshotStatus': value['volumeSnapshotStatus'] == null ? undefined : ((value['volumeSnapshotStatus'] as Array<any>).map(V1beta1VolumeSnapshotStatusToJSON)),
    };
}

